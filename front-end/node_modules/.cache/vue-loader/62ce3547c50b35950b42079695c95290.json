{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue?vue&type=style&index=0&id=56ffb3c0&scoped=true&lang=css&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue","mtime":1652714345557},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/css-loader/dist/cjs.js","mtime":1652714343253},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1652714344709},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/postcss-loader/src/index.js","mtime":1652714343869},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1652714343001},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1652714344709}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3Bsb3R7CiAgcGFkZGluZzogMCU7CiAgbWFyZ2luOiAwJQp9CiNwbG90IC5tb2RlYmFyewogICAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["CitationsCol.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CitationsCol.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <td>\n        <div v-if=\"pubPlotProps.citations.length!=0\">\n            <div :id=\"pubPlotProps._id\" class=\"plot\"></div>\n        </div>\n    </td>\n</template>\n\n<script>\nimport Plotly from 'plotly.js-dist-min'\n\nvar layout = {title:false,\n              showlegend: false,\n              hoverlabel: { bgcolor: \"#FFF\" },\n              margin: { l:0, t:0, b:0, r:0},\n              font: {size: 9},\n              width: 200,\n              height: 100,\n              yaxis: {\n                title: {\n                  text: 'count',\n                  standoff: 8,\n                  font: {\n                    size: 8\n                  }},\n              tickformat: 'd',\n              automargin: true\n              },\n              xaxis : {\n                title: {\n                  text: 'year',\n                  standoff: 5,\n                  font: {\n                    size: 8\n                  }\n                },\n                tickangle: 30,\n                tickformat: 'd',\n                automargin: true\n                }};\n\nexport default {\n    name: 'CitationsCol',\n    props: ['pubPlotProps'],\n    data() {\n        return {\n        labels : [],\n        plot:true\n        }\n    },\n    mounted() {\n        if(this.pubPlotProps.citations.length === 0){\n            this.plot = false\n        }\n        else{\n            this.plot = true\n            Plotly.newPlot(this.pubPlotProps._id, /* JSON object */ {\n            \"data\": this.build_traces(),\n            \"config\": { \"displayModeBar\": false  },\n            \"layout\": layout\n            }\n        )}\n    },\n    methods: {\n        build_traces(){\n            var traces = []\n            for (let i = 0; i < this.pubPlotProps.citations.length; i++) {\n                var pub = this.pubPlotProps.citations[i]\n                var new_data = {x : pub['trace']['x'], \n                                y : pub['trace']['y'],\n                                name: pub['title'],\n                                type: 'scatter',\n                                text: Array(pub['trace']['x'].length).fill(pub['title']),\n                                hovertemplate: \n                                    \"year: %{x:d} </br></br>\" + \n                                    \"count: %{y:d}\" +\n                                    \"<extra></extra>\",\n                                mode: 'lines+markers',\n                                line: {\n                                    width: 1\n                                    },\n                                marker:{\n                                    size: 4\n                                    }\n                                }\n                this.labels.push(pub['title'])\n                traces.push(new_data)\n                }\n            return(traces)\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n#plot{\n  padding: 0%;\n  margin: 0%\n}\n#plot .modebar{\n    display: none !important;\n}\n</style>"]}]}