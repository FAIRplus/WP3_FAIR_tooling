{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/PublicationsCol.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/PublicationsCol.vue","mtime":1652714345557},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/css-loader/dist/cjs.js","mtime":1652714343253},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1652714344709},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/postcss-loader/src/index.js","mtime":1652714343869},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1652714343001},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1652714344709}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wdWJsaWNhdGlvbnMgPj4+IC5mYXN7CiAgcGFkZGluZy1yaWdodDogLjE1ZW07CiAgcGFkZGluZy1sZWZ0OiAuMTVlbTsKICBwYWRkaW5nLWJvdHRvbTogLjRlbTsKfQo="},{"version":3,"sources":["PublicationsCol.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA","file":"PublicationsCol.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <td>\n        <ul>\n            <div v-for=\"(pdata, idx) in build_pubs(item)\" :key=\"idx\" class='publications'>\n                <v-icon class='fas fa-circle' :color = 'pdata.color' size=\"10\"></v-icon> \n                <span v-html=\"pdata['label']\" />\n                <a v-for=\"(link, idx) in pdata['links']\" :key=\"idx\"  :href=\"link\" target=\"_blank\">  \n                    <i class='fas fa-external-link-alt' size=\"3\"></i>\n                </a>\n            </div>\n        </ul>\n    </td> \n</template>\n\n<script>\nexport default {\n    name: 'PublicationsCol',\n    props: ['item', 'idx'],\n    data() {\n        return {\n            linksURLs: [\n                {id : 'doi',  template : 'https://doi.org/'},\n                {id : 'pmcid', template : 'https://www.ncbi.nlm.nih.gov/pmc/articles/'},\n                {id : 'pmid', template :'https://pubmed.ncbi.nlm.nih.gov/'},\n                {id : 'url', template: ''}\n                ],\n                plot_colors: [\n            '#1f77b4',\n            '#ff7f0e',\n            '#2ca02c',\n            '#d62728',\n            '#9467bd',\n            '#8c564b',\n            '#e377c2',\n            '#7f7f7f',\n            '#bcbd22',\n            '#17becf' \n            ],\n            labels:''\n        }\n    },\n \n    methods: {\n        build_pubs(item){\n            var labels = []\n            for (let i = 0; i < item.citations.length; i++) {\n                var links = []\n                var linkFound = 0\n                for(var k = 0; k < this.linksURLs.length; k++){\n                    while(linkFound < 1){\n                        const idType = this.linksURLs[k]['id']\n                        if(item.citations[i][idType]!=undefined){\n                            links.push(this.linksURLs[k]['template']+item.citations[i][idType])\n                            linkFound ++\n                            console.log('hey')\n                            console.log(i)\n                            console.log(linkFound)\n                            }\n                    }\n                }\n                var label = ''\n                if(item.citations[i]['year'] == undefined){\n                    if(item.citations[i]['title'] == undefined){\n                        label = 'link'\n                    }else{\n                        label = item.citations[i]['title']\n                    }\n                }else{\n                    label = `<span>${item.citations[i]['title']}(${item.citations[i]['year']})</span>`\n                }\n                labels.push({'label':label, \n                            'color':this.plot_colors[i],\n                            'year':item.citations[i]['year'],\n                            'links':links})\n            }\n            for (let e = 0; e < item.citations_other.length; e++) {\n                links = []\n                linkFound = 0\n                for(var j = 0; j < this.linksURLs.length; j++){\n                    while(linkFound < 1){\n                        const idType = this.linksURLs[j]['id']\n                        if(item.citations_other[e][idType]!=undefined){\n                            links.push(this.linksURLs[j]['template']+item.citations_other[e][idType])\n                            linkFound ++\n                        }\n                    }\n                }\n                label = ''\n                if(item.citations_other[e]['title'] != '' && item.citations_other[e]['title'] != undefined){\n                    labels.push({'label': item.citations_other[e]['title'],\n                                'color': 'black',\n                                'year': null,\n                                'links': links})\n                }\n            }\n            console.log(labels)\n            return(labels)\n        }\n    }\n}\n</script>\n\n<style>\n.publications >>> .fas{\n  padding-right: .15em;\n  padding-left: .15em;\n  padding-bottom: .4em;\n}\n</style>"]}]}