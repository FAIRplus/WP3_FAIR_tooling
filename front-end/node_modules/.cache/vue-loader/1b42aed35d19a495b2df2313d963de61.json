{"remainingRequest":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/src/components/PubPlot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/src/components/PubPlot.vue","mtime":1643624757867},{"path":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/node_modules/babel-loader/lib/index.js","mtime":1640024185676},{"path":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/FAIRplus/tooling/WP3_FAIR_tooling/app/node_modules/vue-loader/lib/index.js","mtime":1640024185900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQbG90bHkgZnJvbSAncGxvdGx5LmpzLWRpc3QtbWluJwp2YXIgbGF5b3V0ID0ge3RpdGxlOmZhbHNlLAogICAgICAgICAgICAgIHNob3dsZWdlbmQ6IGZhbHNlLAogICAgICAgICAgICAgIGhvdmVybGFiZWw6IHsgYmdjb2xvcjogIiNGRkYiIH0sCiAgICAgICAgICAgICAgbWFyZ2luOiB7IGw6MCwgdDowLCBiOjAsIHI6MH0sCiAgICAgICAgICAgICAgZm9udDoge3NpemU6IDl9LAogICAgICAgICAgICAgIHdpZHRoOiAyMDAsCiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAsCiAgICAgICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgICAgIHRleHQ6ICdjb3VudCcsCiAgICAgICAgICAgICAgICAgIHN0YW5kb2ZmOiA4LAogICAgICAgICAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgICAgICAgICAgc2l6ZTogOAogICAgICAgICAgICAgICAgICB9fSwKICAgICAgICAgICAgICB0aWNrZm9ybWF0OiAnZCcsCiAgICAgICAgICAgICAgYXV0b21hcmdpbjogdHJ1ZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgeGF4aXMgOiB7CiAgICAgICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgICB0ZXh0OiAneWVhcicsCiAgICAgICAgICAgICAgICAgIHN0YW5kb2ZmOiA1LAogICAgICAgICAgICAgICAgICBmb250OiB7CiAgICAgICAgICAgICAgICAgICAgc2l6ZTogOAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgdGlja2FuZ2xlOiAzMCwKICAgICAgICAgICAgICAgIHRpY2tmb3JtYXQ6ICdkJywKICAgICAgICAgICAgICAgIGF1dG9tYXJnaW46IHRydWUKICAgICAgICAgICAgICAgIH19OwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQdWJQbG90JywKICBwcm9wczogWydwdWJQbG90UHJvcHMnXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGFiZWxzIDogW10sCiAgICAgIHBsb3Q6IHRydWUKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBpZih0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnMubGVuZ3RoID09PSAwKXsKICAgICAgdGhpcy5wbG90ID0gZmFsc2UKICAgICAgfQogICAgZWxzZXt0aGlzLnBsb3QgPSB0cnVlfQogICAgUGxvdGx5Lm5ld1Bsb3QodGhpcy5wdWJQbG90UHJvcHMuX2lkLCAvKiBKU09OIG9iamVjdCAqLyB7CiAgICAgICJkYXRhIjogdGhpcy5idWlsZF90cmFjZXMoKSwKICAgICAgImNvbmZpZyI6IHsgImRpc3BsYXlNb2RlQmFyIjogZmFsc2UgIH0sCiAgICAgICJsYXlvdXQiOiBsYXlvdXQKICAgICAgfSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkX3RyYWNlcygpewogICAgICB2YXIgdHJhY2VzID0gW10KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgcHViID0gdGhpcy5wdWJQbG90UHJvcHMuY2l0YXRpb25zW2ldCiAgICAgICAgdmFyIG5ld19kYXRhID0ge3ggOiBwdWJbJ3RyYWNlJ11bJ3gnXSwgCiAgICAgICAgICAgICAgICAgICAgICAgIHkgOiBwdWJbJ3RyYWNlJ11bJ3knXSwKICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcHViWyd0aXRsZSddLAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnc2NhdHRlcicsCiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IEFycmF5KHB1YlsndHJhY2UnXVsneCddLmxlbmd0aCkuZmlsbChwdWJbJ3RpdGxlJ10pLAogICAgICAgICAgICAgICAgICAgICAgICBob3ZlcnRlbXBsYXRlOiAKICAgICAgICAgICAgICAgICAgICAgICAgICAieWVhcjogJXt4OmR9IDwvYnI+PC9icj4iICsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgImNvdW50OiAle3k6ZH0iICsKICAgICAgICAgICAgICAgICAgICAgICAgICAiPGV4dHJhPjwvZXh0cmE+IiwKICAgICAgICAgICAgICAgICAgICAgICAgbW9kZTogJ2xpbmVzK21hcmtlcnMnLAogICAgICAgICAgICAgICAgICAgICAgICBsaW5lOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyOnsKICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplOiA0CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgIHRoaXMubGFiZWxzLnB1c2gocHViWyd0aXRsZSddKQogICAgICAgIHRyYWNlcy5wdXNoKG5ld19kYXRhKQogICAgICB9CiAgICAgIHJldHVybih0cmFjZXMpCiAgICB9Cn0KfQo="},{"version":3,"sources":["PubPlot.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PubPlot.vue","sourceRoot":"src/components","sourcesContent":["<template v-if=\"plot\">\n  <div>\n    <div :id=\"pubPlotProps._id\" class=\"plot\">\n  </div>\n  </div>\n</template>\n\n<style scoped>\n#plot{\n  padding: 0%;\n  margin: 0%\n}\n#plot .modebar{\n    display: none !important;\n}\n</style>\n\n<script>\nimport Plotly from 'plotly.js-dist-min'\nvar layout = {title:false,\n              showlegend: false,\n              hoverlabel: { bgcolor: \"#FFF\" },\n              margin: { l:0, t:0, b:0, r:0},\n              font: {size: 9},\n              width: 200,\n              height: 100,\n              yaxis: {\n                title: {\n                  text: 'count',\n                  standoff: 8,\n                  font: {\n                    size: 8\n                  }},\n              tickformat: 'd',\n              automargin: true\n              },\n              xaxis : {\n                title: {\n                  text: 'year',\n                  standoff: 5,\n                  font: {\n                    size: 8\n                  }\n                },\n                tickangle: 30,\n                tickformat: 'd',\n                automargin: true\n                }};\n\nexport default {\n  name: 'PubPlot',\n  props: ['pubPlotProps'],\n  data() {\n    return {\n      labels : [],\n      plot: true\n    }\n  },\n  mounted() {\n    if(this.pubPlotProps.citations.length === 0){\n      this.plot = false\n      }\n    else{this.plot = true}\n    Plotly.newPlot(this.pubPlotProps._id, /* JSON object */ {\n      \"data\": this.build_traces(),\n      \"config\": { \"displayModeBar\": false  },\n      \"layout\": layout\n      })\n  },\n  methods: {\n    build_traces(){\n      var traces = []\n      for (let i = 0; i < this.pubPlotProps.citations.length; i++) {\n        var pub = this.pubPlotProps.citations[i]\n        var new_data = {x : pub['trace']['x'], \n                        y : pub['trace']['y'],\n                        name: pub['title'],\n                        type: 'scatter',\n                        text: Array(pub['trace']['x'].length).fill(pub['title']),\n                        hovertemplate: \n                          \"year: %{x:d} </br></br>\" + \n                          \"count: %{y:d}\" +\n                          \"<extra></extra>\",\n                        mode: 'lines+markers',\n                        line: {\n                          width: 1\n                        },\n                        marker:{\n                          size: 4\n                        }\n                        }\n        this.labels.push(pub['title'])\n        traces.push(new_data)\n      }\n      return(traces)\n    }\n}\n}\n</script>\n"]}]}