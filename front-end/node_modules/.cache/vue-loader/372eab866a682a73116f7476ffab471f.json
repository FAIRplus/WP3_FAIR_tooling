{"remainingRequest":"/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/tooldiscoverer/src/components/Results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/tooldiscoverer/src/components/Results.vue","mtime":1640460874128},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/babel-loader/lib/index.js","mtime":1640024185676},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js","mtime":1640024185900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTb3VyY2VBdmF0YXIgZnJvbSAnLi9Tb3VyY2VBdmF0YXIudnVlJwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcy1kaXN0LW1pbicKdmFyIGxheW91dCA9IHt0aXRsZTpmYWxzZSwKICAgICAgICAgICAgICBzaG93bGVnZW5kOiBmYWxzZSwKICAgICAgICAgICAgICBtYXJnaW46IHsgbDoxMCwgdDoxMCwgYjoxNCwgcjoxMH19CnZhciB0cmFjZTEgPSB7CiAgeDogWzIwMTcsIDIwMTgsIDIwMTksIDIwMjBdLAogIHk6IFsyLCAxNCwgMjMsIDM1XSwKICB0eXBlOiAnc2NhdHRlcicKfTsKCnZhciB0cmFjZTIgPSB7CiAgeDogWzIwMTcsIDIwMTgsIDIwMTksIDIwMjBdLAogIHk6IFswLCAwLCAzLCAxNV0sCiAgdHlwZTogJ3NjYXR0ZXInCn07Cgp2YXIgZGF0YSA9IFt0cmFjZTEsIHRyYWNlMl07CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Jlc3VsdHMnLAogIHByb3BzOiBbJ3Rvb2xzJywgJ2lucHV0UGFyYW1ldGVycyddLAogIGNvbXBvbmVudHM6IHsKICAgIFNvdXJjZUF2YXRhcgogIH0sCiAgZGF0YSAoKSB7CiAgICByZXR1cm4gewogICAgICBhY3RpdmVSZXN1bHRzOiB0cnVlLAogICAgICBhdmF0YXJzOiB7CiAgICAgICAgYmlvdG9vbHM6IHsKICAgICAgICAgIHNyYzonZWxpeGlyLWxvZ28uc3ZnJywKICAgICAgICAgIGNvbG9yOidvcmFuZ2UnLAogICAgICAgICAgY29udGVudDonYmlvLnRvb2xzJywKICAgICAgICAgIHVybDonYmlvLnRvb2xzJwogICAgICAgIH0sCiAgICAgICAgYmlvY29uZGE6IHsKICAgICAgICAgIHNyYzonYmlvY29uZGEtbG9nby5zdmcnLAogICAgICAgICAgY29sb3I6JyMwMDU1MDAnLAogICAgICAgICAgY29udGVudDonYmlvY29uZGEnLAogICAgICAgICAgdXJsOicnCiAgICAgICAgfSwKICAgICAgICBnaXRodWI6IHsKICAgICAgICAgIHNyYzonZ2l0aHViLWxvZ28uc3ZnJywKICAgICAgICAgIGNvbG9yOidibGFjaycsCiAgICAgICAgICBjb250ZW50OidHaXRIdWInLAogICAgICAgICAgdXJsOidnaXRodWIub3JnJwogICAgICAgIH0sCiAgICAgICAgYmlvY29uZHVjdG9yOiB7CiAgICAgICAgICBzcmM6J2Jpb2NvbmR1Y3Rvci1sb2dvLnN2ZycsCiAgICAgICAgICBjb2xvcjonIzJmOTNiYScsCiAgICAgICAgICBjb250ZW50OidCaW9jb25kdWN0b3InLAogICAgICAgICAgdXJsOicnCiAgICAgICAgfSwKICAgICAgICBnYWxheHk6IHsKICAgICAgICAgIHNyYzogJ2dhbGF4eS1sb2dvLnN2ZycsCiAgICAgICAgICBjb2xvcjogJyMxMzQ3OTgnLAogICAgICAgICAgY29udGVudDogJ0dhbGF4eSBFdScsCiAgICAgICAgICB1cmw6JycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHBhbmVsOiAwLAogICAgICBzZWFyY2g6ICcnLAogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgaXNIb3ZlcmluZzogZmFsc2UsCiAgICAgIGxvbmdSZXN1bHRzOltdLAogICAgICBoZWFkZXJzOiBbCiAgICAgICAge3RleHQ6ICcnLCBhbGlnbjogJ3N0YXJ0Jywgc29ydGFibGU6IGZhbHNlLCB2YWx1ZTogJ2Rvd24nLCB3aWR0aDogJzFlbSd9LAogICAgICAgIHt0ZXh0OiAnVG9vbCcsIGFsaWduOiAnc3RhcnQnLCBzb3J0YWJsZTogZmFsc2UsIHZhbHVlOiAnVG9vbCd9LAogICAgICAgIHt0ZXh0OiAnVHlwZSBvZiBTb2Z0d2FyZScsIHZhbHVlOiAnVHlwZSd9LAogICAgICAgIHt0ZXh0OiAnU291cmNlcycsIHZhbHVlOiAnc291cmNlcyd9LAogICAgICAgIHt0ZXh0OiAnRGVzY3JpcHRpb24nLCB2YWx1ZTogJ0Rlc2NyaXB0aW9uJywgd2lkdGg6ICcyMHJlbSd9LAogICAgICAgIHt0ZXh0OiAnUmVsYXRlZCBUb3BpY3MnLCB2YWx1ZTogJ1RvcGljcycsIHdpZHRoOiAnMTJyZW0nfSwKICAgICAgICB7dGV4dDogJ0Z1bmN0aW9uYWxpdHknLCB2YWx1ZTogJ09wZXJhdGlvbnMnLCB3aWR0aDogJzEycmVtJ30sCiAgICAgICAge3RleHQ6ICdOdW1iZXIgb2YgQ2l0YXRpb25zJywgdmFsdWU6ICdDaXRhdGlvbnMnLCAgd2lkdGg6ICcxMnJlbSd9LAogICAgICAgIHt0ZXh0OiAnTGljZW5zZScsIHZhbHVlOiAnTGljZW5zZSd9LAogICAgICAgIHt0ZXh0OiAnU2NvcmUnLCB2YWx1ZTogJ2tleXdvcmRzX3Njb3JlJ30KICAgICAgXSwKICAgICAgaW5wdXRzSGVhZGVyczogWwogICAgICAgIHt0ZXh0OiAnS2V5d29yZCcsIHZhbHVlOiAna2V5d29yZCd9LAogICAgICAgIHt0ZXh0OiAnV2VpZ2h0JywgdmFsdWU6ICd3ZWlnaHQnfQogICAgICBdLAogICAgICB0eXBlc0FiYjogewogICAgICAgICdDb21tYW5kLWxpbmUgdG9vbCcgOiB7CiAgICAgICAgICAndGV4dCc6ICdDTUQnLAogICAgICAgICAgJ2hvdmVyJzogJ0NvbW1hbmQtbGluZSBUb29sJwogICAgICAgIH0sCiAgICAgICAgJ1dlYiBhcHBsaWNhdGlvbic6IHsKICAgICAgICAgICd0ZXh0JzogJ1dlYicsCiAgICAgICAgICAnaG92ZXInOiAnV2ViIEFwcGxpY2F0aW9uJwogICAgICAgIH0sCiAgICAgICAgJ3Vua25vd24nOiB7CiAgICAgICAgICAndGV4dCc6ICdVbmtub3duJywKICAgICAgICAgICdob3Zlcic6ICdVbmtub3duJwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMudG9vbHMuZm9yRWFjaCgoaXRlbSkgPT4gewogICAgICBpZihpdGVtLkRlc2NyaXB0aW9uLmxlbmd0aD4yMDApewogICAgICAgIHRoaXMubG9uZ1Jlc3VsdHMucHVzaChpdGVtLlRvb2wpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgICAgaWYoaXRlbS5Ub3BpY3MubGVuZ3RoPjMpewogICAgICAgIHRoaXMubG9uZ1Jlc3VsdHMucHVzaChpdGVtLlRvb2wpCiAgICAgICAgcmV0dXJuCiAgICAgIH0KICAgIH0pLAogICAgUGxvdGx5Lm5ld1Bsb3QoImdkIiwgLyogSlNPTiBvYmplY3QgKi8gewogICAgICAiZGF0YSI6IGRhdGEsCiAgICAgICJjb25maWciOiB7ICJkaXNwbGF5TW9kZUJhciI6IGZhbHNlICB9LAogICAgICAibGF5b3V0IjogbGF5b3V0CiAgICB9KQogIH0sCiAgbWV0aG9kczp7CiAgICByb3dTZWxlY3QoaWR4KSB7CiAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3RlZCcsIGlkeCkKICAgICAgaWYodGhpcy5zZWxlY3RlZCA9PT0gaWR4KXsKICAgICAgICB0aGlzLnNlbGVjdGVkID0gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlbGVjdGVkID0gaWR4OwogICAgICB9CiAgICB9LAogICAgYXJyb3dzRG93blNob3coaWR4LCB0b29sSUQpewogICAgICBpZih0aGlzLmxvbmdSZXN1bHRzLmluY2x1ZGVzKHRvb2xJRCkgJiYgaWR4ICE9IHRoaXMuc2VsZWN0ZWQpewogICAgICAgIHJldHVybih0cnVlKQogICAgICB9ZWxzZXsKICAgICAgICByZXR1cm4oZmFsc2UpCiAgICAgIH0KICAgIH0sCiAgICBhcnJvd3NVcFNob3coaWR4LCB0b29sSUQpewogICAgICBpZih0aGlzLmxvbmdSZXN1bHRzLmluY2x1ZGVzKHRvb2xJRCkgJiYgaWR4ID09PSB0aGlzLnNlbGVjdGVkKXsKICAgICAgICByZXR1cm4odHJ1ZSkKICAgICAgfWVsc2V7CiAgICAgICAgcmV0dXJuKGZhbHNlKQogICAgICB9CiAgICB9LAogICAgdHJpbUlmTm90U2VsZWN0ZWQodmFsdWUsIGlkeCl7CiAgICAgIGlmKHRoaXMuc2VsZWN0ZWQgPT09IGlkeCl7CiAgICAgICAgcmV0dXJuKHZhbHVlKQogICAgICB9ZWxzZXsKICAgICAgICBpZih2YWx1ZS5sZW5ndGggPiAyNTUpewogICAgICAgICAgdmFyIHNob3J0ID0gYCR7dmFsdWUuc3Vic3RyaW5nKDAsMjAwKX0uLi5gCiAgICAgICAgfWVsc2V7CiAgICAgICAgICByZXR1cm4odmFsdWUpCiAgICAgICAgfQogICAgICAgIHJldHVybihzaG9ydCkKICAgICAgfQogICAgfSwKICAgIHRyaW1MaXN0SWZOb3RTZWxlY3RlZChsaXN0LCBpZHgpewogICAgICBpZih0aGlzLnNlbGVjdGVkID09PSBpZHgpewogICAgICAgIHJldHVybihsaXN0KQogICAgICB9ZWxzZXsKICAgICAgICB2YXIgc2hvcnRfbGlzdCA9IGxpc3Quc2xpY2UoMCwzKQogICAgICAgIHJldHVybihzaG9ydF9saXN0KQogICAgICB9CiAgICB9LAogICAgZGljdEdldChrZXkpIHsKICAgICAgdmFyIHJlc3VsdCA9IHRoaXMudHlwZXNBYmJba2V5XSB8fCB7J3RleHQnOicnLCAiaG92ZXIiOicnfQogICAgICByZXR1cm4ocmVzdWx0KQogICAgfQogIH0KfQo="},{"version":3,"sources":["Results.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Results.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <v-expansion-panels flat>\n    <v-expansion-panel>\n      <v-expansion-panel-header><h5>Input parameters</h5></v-expansion-panel-header>\n      <v-expansion-panel-content>\n        <div style=\"width:60%\">\n          <v-data-table\n            :headers=\"inputsHeaders\"\n            :items=\"inputParameters\"\n            :items-per-page=\"10\"\n            class=\"elevation-2\"\n          ></v-data-table>\n        </div>\n      </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  <br>\n    <v-expansion-panels flat v-model=\"panel\">\n      <v-expansion-panel\n      expand\n      v-model=\"panel\">\n      <v-expansion-panel-header><h4>Results</h4></v-expansion-panel-header>\n      <v-expansion-panel-content>\n        <div>\n          <v-data-table\n            :class=\"table\"\n            v-model=\"rowSelect\"\n            :headers=\"headers\"\n            :items=\"tools\"\n            :items-per-page=\"10\"\n            :search=\"search\"\n            :sort-by=\"['score']\"\n            :sort-desc=\"[true]\"\n            multi-sort\n            class=\"elevation-0\" \n          >\n            <template v-slot:top>\n              <v-toolbar flat>\n                <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"mdi-magnify\"\n                    label=\"Search\"\n                    single-line\n                ></v-text-field>\n                <v-spacer></v-spacer>\n                </v-toolbar>\n            </template>\n            <template v-slot:[`body`]=\"{ items }\">\n              <tbody>\n                <tr \n                  @click=\"rowSelect(key)\" \n                  v-for=\"(item, key) in items\" :key=\"item.Tool\"\n                >\n                  <td>\n                    <i  v-if=\"arrowsDownShow(key, item.Tool)\" class=\"fas fa-angle-down cell-arrow\"></i>\n                    <i  v-if=\"arrowsUpShow(key, item.Tool)\" class=\"fas fa-angle-up cell-arrow\"></i>\n                  </td>\n                  <td>\n                    <a :href=\"item.URL\">{{ item.Tool }}</a>\n                  </td>\n                  <td>\n                    <div v-for=\"type in item.Type\" :key=\"type\">\n                      {{ dictGet(type)['text'] }}\n                    <!-- Complete dictionary of types-->\n                    </div>\n                  </td>\n                  <td>\n                    <SourceAvatar :avatarProps='avatars.biotools'/>\n                    <SourceAvatar :avatarProps='avatars.bioconda'/>\n                    <SourceAvatar :avatarProps='avatars.github'/>\n                    <SourceAvatar :avatarProps='avatars.bioconductor'/>\n                    <SourceAvatar :avatarProps='avatars.galaxy'/>\n                    </td>\n                  <td>\n                    {{ trimIfNotSelected(item.Description, key) }}\n                  </td>\n                  <td>\n                    <ul>\n                      <li v-for=\"(topic, Tool) in trimListIfNotSelected(item.Topics, key)\" :key=\"Tool\">\n                        {{ topic }}\n                      </li>\n                      <span v-if=\"item.Topics.length > 3\">...</span>\n                    </ul>\n                  </td>\n                  <td>\n                    <ul>\n                      <li v-for=\"(operation, Tool) in trimListIfNotSelected(item.Operations, key)\" :key=\"Tool\">\n                        {{ operation }}\n                      </li>\n                      <span v-if=\"item.Operations.length > 3\">...</span>\n                    </ul>\n                  </td>\n                  <td id=\"gd\">\n                    {{ item.Citations }}\n                    <!-- Add publication in hover or icon next to number that opens the paper -->\n                  </td>\n                  <td>\n                    {{ item.License }}\n                    <!-- Match license to spdx -->\n                  </td>\n                  <td>\n                    {{ item.keywords_score }}\n                  </td>\n                </tr>\n              </tbody>\n            </template>\n          </v-data-table>\n        </div>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</div>\n</template>\n\n<style scoped>\n.v-data-table >>> th {\n  font-size: smaller !important; \n}\n\n.v-data-table.v-data-table.v-data-table >>> tr:hover  {\n  background-color: white !important;\n}\n\n.v-data-table.v-data-table.v-data-table >>> td  {\n  font-size: smaller !important;\n  padding: .5em .5em 1em 1em;\n}\n#descr_panel{\n  font-size: smaller !important;\n}\n\n.cell-arrow{\n  color: darkgray;\n}\n\n.avatar-source{\n  margin-top: 0.4em;\n  margin-right: 0.2em;\n}\n\n.gd{\n  padding: 0%;\n  margin: 0%\n}\n.gd .modebar{\n      display: none !important;\n}\n</style>\n\n<script>\nimport SourceAvatar from './SourceAvatar.vue'\nimport Plotly from 'plotly.js-dist-min'\nvar layout = {title:false,\n              showlegend: false,\n              margin: { l:10, t:10, b:14, r:10}}\nvar trace1 = {\n  x: [2017, 2018, 2019, 2020],\n  y: [2, 14, 23, 35],\n  type: 'scatter'\n};\n\nvar trace2 = {\n  x: [2017, 2018, 2019, 2020],\n  y: [0, 0, 3, 15],\n  type: 'scatter'\n};\n\nvar data = [trace1, trace2];\n\nexport default {\n  name: 'Results',\n  props: ['tools', 'inputParameters'],\n  components: {\n    SourceAvatar\n  },\n  data () {\n    return {\n      activeResults: true,\n      avatars: {\n        biotools: {\n          src:'elixir-logo.svg',\n          color:'orange',\n          content:'bio.tools',\n          url:'bio.tools'\n        },\n        bioconda: {\n          src:'bioconda-logo.svg',\n          color:'#005500',\n          content:'bioconda',\n          url:''\n        },\n        github: {\n          src:'github-logo.svg',\n          color:'black',\n          content:'GitHub',\n          url:'github.org'\n        },\n        bioconductor: {\n          src:'bioconductor-logo.svg',\n          color:'#2f93ba',\n          content:'Bioconductor',\n          url:''\n        },\n        galaxy: {\n          src: 'galaxy-logo.svg',\n          color: '#134798',\n          content: 'Galaxy Eu',\n          url:''\n        }\n      },\n      panel: 0,\n      search: '',\n      selected: null,\n      isHovering: false,\n      longResults:[],\n      headers: [\n        {text: '', align: 'start', sortable: false, value: 'down', width: '1em'},\n        {text: 'Tool', align: 'start', sortable: false, value: 'Tool'},\n        {text: 'Type of Software', value: 'Type'},\n        {text: 'Sources', value: 'sources'},\n        {text: 'Description', value: 'Description', width: '20rem'},\n        {text: 'Related Topics', value: 'Topics', width: '12rem'},\n        {text: 'Functionality', value: 'Operations', width: '12rem'},\n        {text: 'Number of Citations', value: 'Citations',  width: '12rem'},\n        {text: 'License', value: 'License'},\n        {text: 'Score', value: 'keywords_score'}\n      ],\n      inputsHeaders: [\n        {text: 'Keyword', value: 'keyword'},\n        {text: 'Weight', value: 'weight'}\n      ],\n      typesAbb: {\n        'Command-line tool' : {\n          'text': 'CMD',\n          'hover': 'Command-line Tool'\n        },\n        'Web application': {\n          'text': 'Web',\n          'hover': 'Web Application'\n        },\n        'unknown': {\n          'text': 'Unknown',\n          'hover': 'Unknown'\n        }\n      }\n    }\n  },\n  mounted() {\n    this.tools.forEach((item) => {\n      if(item.Description.length>200){\n        this.longResults.push(item.Tool)\n        return\n      }\n      if(item.Topics.length>3){\n        this.longResults.push(item.Tool)\n        return\n      }\n    }),\n    Plotly.newPlot(\"gd\", /* JSON object */ {\n      \"data\": data,\n      \"config\": { \"displayModeBar\": false  },\n      \"layout\": layout\n    })\n  },\n  methods:{\n    rowSelect(idx) {\n      console.log('selected', idx)\n      if(this.selected === idx){\n        this.selected = null;\n      } else {\n        this.selected = idx;\n      }\n    },\n    arrowsDownShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx != this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n    },\n    arrowsUpShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx === this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n    },\n    trimIfNotSelected(value, idx){\n      if(this.selected === idx){\n        return(value)\n      }else{\n        if(value.length > 255){\n          var short = `${value.substring(0,200)}...`\n        }else{\n          return(value)\n        }\n        return(short)\n      }\n    },\n    trimListIfNotSelected(list, idx){\n      if(this.selected === idx){\n        return(list)\n      }else{\n        var short_list = list.slice(0,3)\n        return(short_list)\n      }\n    },\n    dictGet(key) {\n      var result = this.typesAbb[key] || {'text':'', \"hover\":''}\n      return(result)\n    }\n  }\n}\n</script>\n"]}]}