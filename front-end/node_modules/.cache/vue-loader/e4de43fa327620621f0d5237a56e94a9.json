{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue","mtime":1652714345557},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1652714343001},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1652714342705},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1652714343001},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1652714344709}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQbG90bHkgZnJvbSAncGxvdGx5LmpzLWRpc3QtbWluJwoKdmFyIGxheW91dCA9IHt0aXRsZTpmYWxzZSwKICAgICAgICAgICAgICBzaG93bGVnZW5kOiBmYWxzZSwKICAgICAgICAgICAgICBob3ZlcmxhYmVsOiB7IGJnY29sb3I6ICIjRkZGIiB9LAogICAgICAgICAgICAgIG1hcmdpbjogeyBsOjAsIHQ6MCwgYjowLCByOjB9LAogICAgICAgICAgICAgIGZvbnQ6IHtzaXplOiA5fSwKICAgICAgICAgICAgICB3aWR0aDogMjAwLAogICAgICAgICAgICAgIGhlaWdodDogMTAwLAogICAgICAgICAgICAgIHlheGlzOiB7CiAgICAgICAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICAgICAgICB0ZXh0OiAnY291bnQnLAogICAgICAgICAgICAgICAgICBzdGFuZG9mZjogOCwKICAgICAgICAgICAgICAgICAgZm9udDogewogICAgICAgICAgICAgICAgICAgIHNpemU6IDgKICAgICAgICAgICAgICAgICAgfX0sCiAgICAgICAgICAgICAgdGlja2Zvcm1hdDogJ2QnLAogICAgICAgICAgICAgIGF1dG9tYXJnaW46IHRydWUKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHhheGlzIDogewogICAgICAgICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgICAgICAgdGV4dDogJ3llYXInLAogICAgICAgICAgICAgICAgICBzdGFuZG9mZjogNSwKICAgICAgICAgICAgICAgICAgZm9udDogewogICAgICAgICAgICAgICAgICAgIHNpemU6IDgKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHRpY2thbmdsZTogMzAsCiAgICAgICAgICAgICAgICB0aWNrZm9ybWF0OiAnZCcsCiAgICAgICAgICAgICAgICBhdXRvbWFyZ2luOiB0cnVlCiAgICAgICAgICAgICAgICB9fTsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdDaXRhdGlvbnNDb2wnLAogICAgcHJvcHM6IFsncHViUGxvdFByb3BzJ10sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgbGFiZWxzIDogW10sCiAgICAgICAgcGxvdDp0cnVlCiAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgaWYodGhpcy5wdWJQbG90UHJvcHMuY2l0YXRpb25zLmxlbmd0aCA9PT0gMCl7CiAgICAgICAgICAgIHRoaXMucGxvdCA9IGZhbHNlCiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIHRoaXMucGxvdCA9IHRydWUKICAgICAgICAgICAgUGxvdGx5Lm5ld1Bsb3QodGhpcy5wdWJQbG90UHJvcHMuX2lkLCAvKiBKU09OIG9iamVjdCAqLyB7CiAgICAgICAgICAgICJkYXRhIjogdGhpcy5idWlsZF90cmFjZXMoKSwKICAgICAgICAgICAgImNvbmZpZyI6IHsgImRpc3BsYXlNb2RlQmFyIjogZmFsc2UgIH0sCiAgICAgICAgICAgICJsYXlvdXQiOiBsYXlvdXQKICAgICAgICAgICAgfQogICAgICAgICl9CiAgICB9LAogICAgbWV0aG9kczogewogICAgICAgIGJ1aWxkX3RyYWNlcygpewogICAgICAgICAgICB2YXIgdHJhY2VzID0gW10KICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIHZhciBwdWIgPSB0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnNbaV0KICAgICAgICAgICAgICAgIHZhciBuZXdfZGF0YSA9IHt4IDogcHViWyd0cmFjZSddWyd4J10sIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHkgOiBwdWJbJ3RyYWNlJ11bJ3knXSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBwdWJbJ3RpdGxlJ10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6IEFycmF5KHB1YlsndHJhY2UnXVsneCddLmxlbmd0aCkuZmlsbChwdWJbJ3RpdGxlJ10pLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhvdmVydGVtcGxhdGU6IAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAieWVhcjogJXt4OmR9IDwvYnI+PC9icj4iICsgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJjb3VudDogJXt5OmR9IiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICI8ZXh0cmE+PC9leHRyYT4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGU6ICdsaW5lcyttYXJrZXJzJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyOnsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogNAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5sYWJlbHMucHVzaChwdWJbJ3RpdGxlJ10pCiAgICAgICAgICAgICAgICB0cmFjZXMucHVzaChuZXdfZGF0YSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuKHRyYWNlcykKICAgICAgICB9CiAgICB9Cn0KCg=="},{"version":3,"sources":["CitationsCol.vue"],"names":[],"mappings":";;;;;;;;;AASA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CitationsCol.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <td>\n        <div v-if=\"pubPlotProps.citations.length!=0\">\n            <div :id=\"pubPlotProps._id\" class=\"plot\"></div>\n        </div>\n    </td>\n</template>\n\n<script>\nimport Plotly from 'plotly.js-dist-min'\n\nvar layout = {title:false,\n              showlegend: false,\n              hoverlabel: { bgcolor: \"#FFF\" },\n              margin: { l:0, t:0, b:0, r:0},\n              font: {size: 9},\n              width: 200,\n              height: 100,\n              yaxis: {\n                title: {\n                  text: 'count',\n                  standoff: 8,\n                  font: {\n                    size: 8\n                  }},\n              tickformat: 'd',\n              automargin: true\n              },\n              xaxis : {\n                title: {\n                  text: 'year',\n                  standoff: 5,\n                  font: {\n                    size: 8\n                  }\n                },\n                tickangle: 30,\n                tickformat: 'd',\n                automargin: true\n                }};\n\nexport default {\n    name: 'CitationsCol',\n    props: ['pubPlotProps'],\n    data() {\n        return {\n        labels : [],\n        plot:true\n        }\n    },\n    mounted() {\n        if(this.pubPlotProps.citations.length === 0){\n            this.plot = false\n        }\n        else{\n            this.plot = true\n            Plotly.newPlot(this.pubPlotProps._id, /* JSON object */ {\n            \"data\": this.build_traces(),\n            \"config\": { \"displayModeBar\": false  },\n            \"layout\": layout\n            }\n        )}\n    },\n    methods: {\n        build_traces(){\n            var traces = []\n            for (let i = 0; i < this.pubPlotProps.citations.length; i++) {\n                var pub = this.pubPlotProps.citations[i]\n                var new_data = {x : pub['trace']['x'], \n                                y : pub['trace']['y'],\n                                name: pub['title'],\n                                type: 'scatter',\n                                text: Array(pub['trace']['x'].length).fill(pub['title']),\n                                hovertemplate: \n                                    \"year: %{x:d} </br></br>\" + \n                                    \"count: %{y:d}\" +\n                                    \"<extra></extra>\",\n                                mode: 'lines+markers',\n                                line: {\n                                    width: 1\n                                    },\n                                marker:{\n                                    size: 4\n                                    }\n                                }\n                this.labels.push(pub['title'])\n                traces.push(new_data)\n                }\n            return(traces)\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n#plot{\n  padding: 0%;\n  margin: 0%\n}\n#plot .modebar{\n    display: none !important;\n}\n</style>"]}]}