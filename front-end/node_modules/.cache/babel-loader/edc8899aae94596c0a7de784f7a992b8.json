{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue","mtime":1651582117469},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/babel.config.js","mtime":1644317404877},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1644317405145},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1644317406061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci50by1maXhlZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBGaWx0ZXJCdG4gZnJvbSAnLi9GaWx0ZXJCdG4udnVlJzsKaW1wb3J0IEFycm93c0NvbCBmcm9tICcuL0Fycm93c0NvbC52dWUnOwppbXBvcnQgTmFtZUNvbCBmcm9tICcuL05hbWVDb2wudnVlJzsKaW1wb3J0IFR5cGVDb2wgZnJvbSAnLi9UeXBlQ29sLnZ1ZSc7CmltcG9ydCBTb3VyY2VzQ29sIGZyb20gJy4vU291cmNlc0NvbC52dWUnOwppbXBvcnQgRGVzY3JpcHRpb25Db2wgZnJvbSAnLi9EZXNjcmlwdGlvbkNvbC52dWUnOwppbXBvcnQgRW51bUNvbCBmcm9tICcuL0VudW1Db2wudnVlJzsKaW1wb3J0IFB1YmxpY2F0aW9uc0NvbCBmcm9tICcuL1B1YmxpY2F0aW9uc0NvbC52dWUnOwppbXBvcnQgQ2l0YXRpb25zQ29sIGZyb20gJy4vQ2l0YXRpb25zQ29sLnZ1ZSc7CmltcG9ydCBMaWNlbnNlQ29sIGZyb20gJy4vTGljZW5zZUNvbC52dWUnOwppbXBvcnQgU2NvcmVDb2wgZnJvbSAnLi9TY29yZUNvbC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1RhYmxlJywKICBwcm9wczogWyJ0b29scyJdLAogIGNvbXBvbmVudHM6IHsKICAgIEZpbHRlckJ0bjogRmlsdGVyQnRuLAogICAgQXJyb3dzQ29sOiBBcnJvd3NDb2wsCiAgICBOYW1lQ29sOiBOYW1lQ29sLAogICAgVHlwZUNvbDogVHlwZUNvbCwKICAgIFNvdXJjZXNDb2w6IFNvdXJjZXNDb2wsCiAgICBEZXNjcmlwdGlvbkNvbDogRGVzY3JpcHRpb25Db2wsCiAgICBFbnVtQ29sOiBFbnVtQ29sLAogICAgUHVibGljYXRpb25zQ29sOiBQdWJsaWNhdGlvbnNDb2wsCiAgICBDaXRhdGlvbnNDb2w6IENpdGF0aW9uc0NvbCwKICAgIExpY2Vuc2VDb2w6IExpY2Vuc2VDb2wsCiAgICBTY29yZUNvbDogU2NvcmVDb2wKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpbnB1dFR5cGVzOiBbJ0NTVicsICdHRkYnLCAnQkVEJywgJ0ZBU1RBJ10sCiAgICAgIG91dHB1dFR5cGVzOiBbJ0NTVicsICdHRkYnLCAnQkVEJywgJ0ZBU1RBJ10sCiAgICAgIGlucHV0VmFsdWVzOiBbXSwKICAgICAgb3V0cHV0VmFsdWVzOiBbXSwKICAgICAgdG9nZ2xlX3NvdXJjZXM6IFswLCAxLCAyLCAzLCA0LCA1LCA2XSwKICAgICAgdG9nZ2xlX3R5cGVzOiBbMCwgMSwgMiwgMywgNF0sCiAgICAgIGFjdGl2ZVJlc3VsdHM6IHRydWUsCiAgICAgIHBhbmVsOiAxLAogICAgICBzZWFyY2g6ICcnLAogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgaXNIb3ZlcmluZzogZmFsc2UsCiAgICAgIGxvbmdSZXN1bHRzOiBbXSwKICAgICAgZmlsdGVyc01hcHBpbmc6IHsKICAgICAgICBzb3VyY2VzOiBbJ2Jpb3Rvb2xzJywgJ2dpdGh1YicsICdiaW9jb25kYScsICdnYWxheHknLCAnc291cmNlZm9yZ2UnLCAnYmlvY29uZHVjdG9yJywgJ2JpdGJ1Y2tldCddLAogICAgICAgIHR5cGVzOiBbJ2NtZCcsICd3ZWInLCAnbGlicmFyeScsICdkYicsICdzdWl0ZSddCiAgICAgIH0KICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaGVhZGVyczogZnVuY3Rpb24gaGVhZGVycygpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBbewogICAgICAgIHRleHQ6ICcnLAogICAgICAgIGFsaWduOiAnc3RhcnQnLAogICAgICAgIHNvcnRhYmxlOiBmYWxzZSwKICAgICAgICB2YWx1ZTogJ2Rvd24nLAogICAgICAgIHdpZHRoOiAnMWVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1Rvb2wgTmFtZScsCiAgICAgICAgYWxpZ246ICdzdGFydCcsCiAgICAgICAgc29ydGFibGU6IGZhbHNlLAogICAgICAgIHZhbHVlOiAnbmFtZScsCiAgICAgICAgd2lkdGg6ICczcmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1R5cGUgb2YgU29mdHdhcmUnLAogICAgICAgIHZhbHVlOiAndHlwZScsCiAgICAgICAgd2lkdGg6ICc2cmVtJywKICAgICAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcih2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIF90aGlzLmZpbHRlcihfdGhpcy50b2dnbGVfdHlwZXMsIF90aGlzLnR5cGVNYXBwaW5nLCB2YWx1ZSk7CiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0F2YWlsYWJpbGl0eScsCiAgICAgICAgdmFsdWU6ICdzb3VyY2UnLAogICAgICAgIHdpZHRoOiAnNnJlbScsCiAgICAgICAgZmlsdGVyOiBmdW5jdGlvbiBmaWx0ZXIodmFsdWUpIHsKICAgICAgICAgIHJldHVybiBfdGhpcy5maWx0ZXIoX3RoaXMudG9nZ2xlX3NvdXJjZXMsIF90aGlzLnNvdXJjZU1hcHBpbmcsIHZhbHVlKTsKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRGVzY3JpcHRpb24nLAogICAgICAgIHZhbHVlOiAnZGVzY3JpcHRpb24nLAogICAgICAgIHdpZHRoOiAnMTNyZW0nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUmVsYXRlZCBUb3BpY3MnLAogICAgICAgIHZhbHVlOiAnZWRhbV90b3BpY3MnLAogICAgICAgIHdpZHRoOiAnOHJlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdGdW5jdGlvbmFsaXR5JywKICAgICAgICB2YWx1ZTogJ2VkYW1fb3BlcmF0aW9ucycsCiAgICAgICAgd2lkdGg6ICc4cmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0lucHV0IERhdGEgRm9ybWF0JywKICAgICAgICB2YWx1ZTogJ2lucHV0X2Zvcm1hdF9sYWJlbHMnLAogICAgICAgIHdpZHRoOiAnOHJlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdPdXRwdXQgRGF0YSBGb3JtYXQnLAogICAgICAgIHZhbHVlOiAnb3V0cHV0X2Zvcm1hdF9sYWJlbHMnLAogICAgICAgIHdpZHRoOiAnOHJlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdQdWJsaWNhdGlvbnMnLAogICAgICAgIHZhbHVlOiAncHVibGljYXRpb25zJywKICAgICAgICB3aWR0aDogJzEzcmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ051bWJlciBvZiBDaXRhdGlvbnMnLAogICAgICAgIHZhbHVlOiAncHVibGljYXRpb25zJywKICAgICAgICB3aWR0aDogJzEzcmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0xpY2Vuc2UnLAogICAgICAgIHZhbHVlOiAnbGljZW5zZScsCiAgICAgICAgd2lkdGg6ICc1cmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1Njb3JlJywKICAgICAgICB2YWx1ZTogJ3Njb3JlJywKICAgICAgICB3aWR0aDogJzNyZW0nCiAgICAgIH1dOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIHRoaXMudG9vbHMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICBpZiAoaXRlbS5kZXNjcmlwdGlvblswXS5sZW5ndGggPiAzMjApIHsKICAgICAgICBfdGhpczIubG9uZ1Jlc3VsdHMucHVzaChpdGVtLm5hbWUpOwogICAgICB9CgogICAgICBpZiAoaXRlbS5lZGFtX29wZXJhdGlvbnMubGVuZ3RoID4gNSkgewogICAgICAgIF90aGlzMi5sb25nUmVzdWx0cy5wdXNoKGl0ZW0ubmFtZSk7CiAgICAgIH0KCiAgICAgIGlmIChpdGVtLmVkYW1fdG9waWNzLmxlbmd0aCA+IDUpIHsKICAgICAgICBfdGhpczIubG9uZ1Jlc3VsdHMucHVzaChpdGVtLm5hbWUpOwogICAgICB9CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKHRvZ2dsZUFycmF5LCBtYXBwaW5nRnVuY3QsIHZhbHVlKSB7CiAgICAgIC8qIENvbnZlcnQgZmlsdGVycyBpbmRleCB0byBzb3VyY2VzIGxhYmVscyovCiAgICAgIHZhciBtYXBwZWRfZmlsdGVycyA9IHRvZ2dsZUFycmF5Lm1hcChtYXBwaW5nRnVuY3QpOwogICAgICAvKiBPdmVybGFwIGJldHdlZW4gdG9vbCBzb3VyY2VzIGFuZCBmaWx0ZXJzKi8KCiAgICAgIHZhciBvdmVybGFwQXJyYXkgPSBtYXBwZWRfZmlsdGVycy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gdmFsdWUuaW5jbHVkZXMoaXRlbSk7CiAgICAgIH0pOwogICAgICAvKiBJZiBvdmVybGFwLCBzaG93IHRvb2wgKi8KCiAgICAgIGNvbnNvbGUubG9nKG92ZXJsYXBBcnJheSk7CgogICAgICBpZiAob3ZlcmxhcEFycmF5Lmxlbmd0aCA+IDApIHsKICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9LAogICAgc291cmNlTWFwcGluZzogZnVuY3Rpb24gc291cmNlTWFwcGluZyh4KSB7CiAgICAgIHJldHVybiB0aGlzLmZpbHRlcnNNYXBwaW5nLnNvdXJjZXNbeF07CiAgICB9LAogICAgdHlwZU1hcHBpbmc6IGZ1bmN0aW9uIHR5cGVNYXBwaW5nKHgpIHsKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyc01hcHBpbmcudHlwZXNbeF07CiAgICB9LAogICAgcm93U2VsZWN0OiBmdW5jdGlvbiByb3dTZWxlY3QoaWR4KSB7CiAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3RlZCcsIGlkeCk7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gaWR4KSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGlkeDsKICAgICAgfQogICAgfSwKICAgIGFycm93c0Rvd25TaG93OiBmdW5jdGlvbiBhcnJvd3NEb3duU2hvdyhpZHgsIHRvb2xJRCkgewogICAgICBpZiAodGhpcy5sb25nUmVzdWx0cy5pbmNsdWRlcyh0b29sSUQpICYmIGlkeCAhPSB0aGlzLnNlbGVjdGVkKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9LAogICAgYXJyb3dzVXBTaG93OiBmdW5jdGlvbiBhcnJvd3NVcFNob3coaWR4LCB0b29sSUQpIHsKICAgICAgaWYgKHRoaXMubG9uZ1Jlc3VsdHMuaW5jbHVkZXModG9vbElEKSAmJiBpZHggPT09IHRoaXMuc2VsZWN0ZWQpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICB0cmltTGlzdElmTm90U2VsZWN0ZWQ6IGZ1bmN0aW9uIHRyaW1MaXN0SWZOb3RTZWxlY3RlZChsaXN0LCBpZHgpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWQgPT09IGlkeCkgewogICAgICAgIHJldHVybiBsaXN0OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBzaG9ydF9saXN0ID0gbGlzdC5zbGljZSgwLCA1KTsKICAgICAgICByZXR1cm4gc2hvcnRfbGlzdDsKICAgICAgfQogICAgfSwKICAgIGZvcm1hdHM6IGZ1bmN0aW9uIGZvcm1hdHMoX2Zvcm1hdHMpIHsKICAgICAgdmFyIHN0cmluZyA9ICcnOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBfZm9ybWF0cy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChpID4gMCkgewogICAgICAgICAgc3RyaW5nID0gc3RyaW5nICsgJywgJyArIF9mb3JtYXRzW2ldOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBzdHJpbmcgPSBzdHJpbmcgKyAnOiAnICsgX2Zvcm1hdHNbaV07CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gc3RyaW5nOwogICAgfSwKICAgIHNwYW46IGZ1bmN0aW9uIHNwYW4odGl0bGUsIHllYXIpIHsKICAgICAgdmFyIHNwYW4gPSAiIi5jb25jYXQodGl0bGUsICIgKCIpLmNvbmNhdCh5ZWFyLCAiKSIpOwogICAgICByZXR1cm4gc3BhbjsKICAgIH0sCiAgICBmb3JtYXROdW1iZXI6IGZ1bmN0aW9uIGZvcm1hdE51bWJlcihudW0pIHsKICAgICAgcmV0dXJuIHBhcnNlRmxvYXQobnVtKS50b0ZpeGVkKDIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Table.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card elevation=\"2\" style=\"margin-bottom:4em; margin-top:2em\">\n            <v-form>\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"12\" class=\"py-2\">\n                        <h5>\n                            Filters\n                        </h5>\n                        </v-col>\n                        <span class=\"filterTitle\">\n                            Availability\n                        </span>\n                        <v-col\n                        cols=\"12\"\n                        class=\"py-2\"\n                        style=\"margin-bottom:.9em\"\n                        >    \n                            <v-btn-toggle\n                            v-model=\"toggle_sources\"\n                            multiple\n                            dense\n                            group\n                            >\n                                <FilterBtn \n                                    v-for=\"label in filtersMapping.sources\" \n                                    :key=\"filtersMapping.sources.indexOf(label)\" \n                                    :label=\"label\" \n                                    icon />\n                            </v-btn-toggle>\n                        </v-col>\n                        <span class=\"filterTitle\">\n                            Type of Software\n                        </span>\n                        <v-col\n                        cols=\"12\"\n                        class=\"py-2\"\n                        style=\"margin-bottom:.9em\"\n                        >    \n                            <v-btn-toggle\n                                v-model=\"toggle_types\"\n                                multiple\n                                dense\n                                group\n                            >   \n                                <FilterBtn  \n                                    v-for=\"item in filtersMapping.types\" \n                                    :key=\"filtersMapping.types.indexOf(item)\" \n                                    :label=\"item\" \n                                    />\n\n                            </v-btn-toggle>\n                        </v-col>\n                        <span class=\"filterTitle\">\n                            Data Types\n                        </span>\n                        <v-row\n                        style=\"margin-top:.9em\">\n                        <v-col\n                        cols=\"5\"\n                        class=\"py-2\"\n                        >\n                            <v-autocomplete\n                                v-model=\"inputValues\"\n                                :items=\"inputTypes\"\n                                outlined\n                                dense\n                                label=\"Input\"\n                            ></v-autocomplete>\n                        </v-col>\n                        <v-col\n                            cols=\"1\">\n                        </v-col>\n                        <v-col\n                        cols=\"5\"\n                        class=\"py-2\"\n                        >\n                            <v-autocomplete\n                                v-model=\"outputValues\"\n                                :items=\"outputTypes\"\n                                outlined\n                                dense\n                                label=\"Output\"\n                            ></v-autocomplete>\n                        </v-col>\n                        </v-row>\n                    </v-row>\n                </v-container>\n            </v-form>\n        </v-card >\n    <v-data-table\n    v-model=\"rowSelect\"\n    :headers=\"headers\"\n    :items=\"tools\"\n    :items-per-page=\"10\"\n    :search=\"search\"\n    :sort-by=\"['score']\"\n    :sort-desc=\"[true]\"\n    multi-sort\n    class=\"elevation-0\" \n    >\n    <template v-slot:[`body`]=\"{ items }\">\n        <tbody>\n        <tr \n            @click=\"rowSelect(key)\" \n            v-for=\"(item, key) in items\" :key=\"item._id.toString()\"\n        >\n            <ArrowsCol :down=\"arrowsDownShow(key, item.name)\" :up=\"arrowsUpShow(key, item.name)\"/>\n            <NameCol :name=\"item.name\" />\n            <TypeCol :type=\"item.type\" />\n            <SourcesCol :itemSources=\"item.sources_labels\" />\n            <DescriptionCol :description=\"item.description\" :selected=\"selected\" :idx=\"key\" />\n            <EnumCol \n                :items=\"item.edam_topics\" \n                :selected=\"selected\" \n                :arrowsUp=\"arrowsUpShow(key, item.name)\"\n                :idx=\"key\" />\n            <EnumCol \n                :items=\"item.edam_operations\"\n                :selected=\"selected\"\n                :arrowsUp=\"arrowsUpShow(key, item.name)\"\n                :idx=\"key\"/>\n            <td>\n                <ul>\n                    <li v-for=\"format in item.input_format_labels\" :key=\"item.input_format_labels.indexOf(format)\">\n                    {{ format }}\n                    </li>\n                    <span v-if=\"dots\">...</span>                      \n                </ul>\n            </td>\n\n            <td>\n                <ul>\n                    <li v-for=\"format in item.output_format_labels\" :key=\"item.output_format_labels.indexOf(format)\">\n                    {{ format }}\n                    </li>\n                    <span v-if=\"dots\">...</span>                      \n                </ul>\n            </td>\n\n\n            <PublicationsCol :item=\"item\" :idx=\"key\" />\n            <CitationsCol :pubPlotProps='item' />\n\n            <LicenseCol :licenses=\"item.license\"  />\n            <ScoreCol :score=\"item.score\" />\n\n        </tr>\n        </tbody>\n    </template>\n    </v-data-table>\n    </div>\n</template>\n\n<script>\n\nimport FilterBtn from './FilterBtn.vue'\nimport ArrowsCol from './ArrowsCol.vue'\nimport NameCol from './NameCol.vue'\nimport TypeCol from './TypeCol.vue'\nimport SourcesCol from './SourcesCol.vue'\nimport DescriptionCol from './DescriptionCol.vue'\nimport EnumCol from './EnumCol.vue'\nimport PublicationsCol from './PublicationsCol.vue'\nimport CitationsCol from './CitationsCol.vue'\nimport LicenseCol from './LicenseCol.vue'\nimport ScoreCol from './ScoreCol.vue'\n\nexport default {\n    name : 'Table',\n    props: [\"tools\"],\n    components : {\n        FilterBtn,\n        ArrowsCol,\n        NameCol,\n        TypeCol,\n        SourcesCol,\n        DescriptionCol,\n        EnumCol,\n        PublicationsCol,\n        CitationsCol,\n        LicenseCol,\n        ScoreCol\n    },\n    data() {\n        return {\n            inputTypes: ['CSV', 'GFF', 'BED', 'FASTA'],\n            outputTypes: ['CSV', 'GFF', 'BED', 'FASTA'],\n            inputValues: [],\n            outputValues: [],\n            toggle_sources: [0,1,2,3,4,5,6],\n            toggle_types: [0,1,2,3,4],\n            activeResults: true,\n            panel: 1,\n            search: '',\n            selected: null,\n            isHovering: false,\n            longResults:[],\n            filtersMapping: {\n                sources : ['biotools', 'github', 'bioconda','galaxy', 'sourceforge', 'bioconductor', 'bitbucket'],\n                types : ['cmd', 'web', 'library', 'db', 'suite']\n            }\n        }\n    }, \n    computed: {\n        headers () {\n            return [\n                {text: '', align: 'start', sortable: false, value: 'down', width: '1em'},\n                {text: 'Tool Name', align: 'start', sortable: false, value: 'name', width: '3rem'},\n                {\n                    text: 'Type of Software', \n                    value: 'type', \n                    width: '6rem',\n                    filter: value => {\n                        return this.filter(this.toggle_types, this.typeMapping, value)\n                    }\n                },\n                {\n                    text: 'Availability', \n                    value: 'source', \n                    width: '6rem', \n                    filter: value => {\n                        return this.filter(this.toggle_sources, this.sourceMapping, value)\n                        }\n                },\n                {text: 'Description', value: 'description', width: '13rem'},\n                {text: 'Related Topics', value: 'edam_topics', width: '8rem'},\n                {text: 'Functionality', value: 'edam_operations', width: '8rem'},\n                {text: 'Input Data Format', value: 'input_format_labels', width: '8rem'},\n                {text: 'Output Data Format', value: 'output_format_labels', width: '8rem'},\n                {text: 'Publications', value: 'publications', width: '13rem'},\n                {text: 'Number of Citations', value: 'publications',  width: '13rem'},\n                {text: 'License', value: 'license', width: '5rem'},\n                {text: 'Score', value: 'score', width: '3rem'}\n                ]\n            },\n    },\n    mounted() {\n    this.tools.forEach((item) => {\n      if(item.description[0].length>320){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_operations.length>5){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_topics.length>5){\n        this.longResults.push(item.name)\n      }\n    })},\n    methods : {\n        filter(toggleArray, mappingFunct, value){\n            /* Convert filters index to sources labels*/\n            var mapped_filters = toggleArray.map(mappingFunct)\n            \n            /* Overlap between tool sources and filters*/\n            const overlapArray = mapped_filters.filter(item => value.includes(item))\n            /* If overlap, show tool */\n            console.log(overlapArray)\n            if(overlapArray.length>0){\n                return value\n            }else{\n                return false\n            }   \n        },\n        sourceMapping(x){\n            return this.filtersMapping.sources[x]\n        },\n        typeMapping(x){\n            return this.filtersMapping.types[x]\n        },\n        rowSelect(idx) {\n        console.log('selected', idx)\n        if(this.selected === idx){\n            this.selected = null;\n        } else {\n            this.selected = idx;\n      }\n        },\n        arrowsDownShow(idx, toolID){\n            if(this.longResults.includes(toolID) && idx != this.selected){\n                return(true)\n            }else{\n                return(false)\n            }\n        },\n        arrowsUpShow(idx, toolID){\n            if(this.longResults.includes(toolID) && idx === this.selected){\n                return(true)\n            }else{\n                return(false)\n            }\n        },\n        trimListIfNotSelected(list, idx){\n        if(this.selected === idx){\n            return(list)\n        }else{\n            var short_list = list.slice(0,5)\n            return(short_list)\n        }\n        },\n        \n        formats(formats){\n            var string = ''\n            for (let i = 0; i < formats.length; i++) {\n                if(i>0){\n                string= string + ', ' + formats[i]\n                }else{\n                string= string + ': ' + formats[i]\n                }\n        }\n        return(string)\n        },\n        span(title, year){\n        const span = `${title} (${year})`\n        return(span)\n        },\n        \n        formatNumber (num) {\n        return parseFloat(num).toFixed(2)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n.v-data-table >>> th {\n  font-size: smaller !important; \n}\n\n.v-data-table.v-data-table.v-data-table >>> tr:hover  {\n  background-color: white !important;\n}\n\n.v-data-table.v-data-table.v-data-table >>> td  {\n  font-size: smaller !important;\n  padding: .5em .5em 1em 1em;\n}\n\n\n#url{\n  width: 96%;\n  text-align: left;\n  margin-right: auto;\n  margin-left: auto;\n}\n#url p{\n  text-indent: .7rem;\n}\n\n\n</style>"],"sourceRoot":"src/components"}]}