{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue","mtime":1651056252734},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/babel.config.js","mtime":1644317404877},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1644317405145},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1644317406061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Table.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n        <v-card elevation=\"2\" style=\"margin-bottom:4em; margin-top:2em\">\n            <v-col cols=\"12\" class=\"py-2\">\n            <h5>\n                Filters\n            </h5>\n            </v-col>\n            <v-col\n            cols=\"12\"\n            class=\"py-2\"\n            >\n                <p>\n                    Availability\n                </p>\n                <v-btn-toggle\n                v-model=\"toggle_sources\"\n                multiple\n                dense\n                group\n                >\n                    <FilterBtn \n                        v-for=\"label in sources_filters_mappings\" \n                        :key=\"sources_filters_mappings.indexOf(label)\" \n                        :label=\"label\" \n                        icon />\n                    \n                </v-btn-toggle>\n            </v-col>\n            <v-col\n            cols=\"12\"\n            class=\"py-2\"\n            >\n                <p>\n                    Type of Software\n                </p>\n                <v-btn-toggle\n                    v-model=\"toggle_types\"\n                    multiple\n                    dense\n                    group\n                >   \n                    <FilterBtn  \n                        v-for=\"item in filtersMapping.types\" \n                        :key=\"typesFilterLabs.indexOf(item)\" \n                        :label=\"item\" \n                        />\n\n                </v-btn-toggle>\n            </v-col>\n        </v-card >\n    <v-data-table\n    v-model=\"rowSelect\"\n    :headers=\"headers\"\n    :items=\"tools\"\n    :items-per-page=\"10\"\n    :search=\"search\"\n    :sort-by=\"['score']\"\n    :sort-desc=\"[true]\"\n    multi-sort\n    class=\"elevation-0\" \n    >\n    <template v-slot:[`body`]=\"{ items }\">\n        <tbody>\n        <tr \n            @click=\"rowSelect(key)\" \n            v-for=\"(item, key) in items\" :key=\"item._id.toString()\"\n        >\n            <td>\n            <i  v-if=\"arrowsDownShow(key, item.name)\" class=\"fas fa-angle-down cell-arrow\"></i>\n            <i  v-if=\"arrowsUpShow(key, item.name)\" class=\"fas fa-angle-up cell-arrow\"></i>\n            </td>\n            <td>\n            <b><big>{{ item.name }}</big></b>\n            </td>\n            <td>\n                {{ dictGet(item.type).hover }}\n            </td>\n            <td>\n            <SourceAvatar \n                v-for=\"source in avatars\"\n                :key=\"source.content\" \n                :avatarProps=\"source\"\n                :sources_labels='item.sources_labels' />\n\n            </td>\n            <td>\n            <span v-html=\"descriptionSpan(trimIfNotSelected(item.description[0], key))\"></span>\n            </td>\n            <td>\n            <ul>\n                <li v-for=\"(topic, name) in trimListIfNotSelected(item.edam_topics, key)\" :key=\"name\">\n                {{ topic.label }}\n                </li>\n                <span v-if=\"item.edam_topics.length > 5 && arrowsUpShow(key, item.name) == false\">...</span>                      \n            </ul>\n            </td>\n            <td>\n            <ul>\n                <li v-for=\"(operation, name) in trimListIfNotSelected(item.edam_operations, key)\" :key=\"name\">\n                {{ operation.label }}\n                </li>\n                <span v-if=\"item.edam_operations.length > 5 && arrowsUpShow(key, item.name) == false\">...</span>\n            </ul>\n            </td>\n            <td>\n            <ul>\n                <div v-for=\"(pdata, year) in build_pubs(item, key)\" :key=\"year\" class='publications'>\n                <v-icon class='fas fa-circle' :color = 'pdata.color' size=\"10\"></v-icon> \n                <span v-html=\"pdata['label']\" />\n                    <a v-for=\"(link, year) in pdata['links']\" :key=\"year\"  :href=\"link\" target=\"_blank\">  \n                    <i class='fas fa-external-link-alt' size=\"3\"></i>\n                    </a>\n                </div>\n            </ul>\n            </td>\n            <td>\n            <PubPlot :pubPlotProps='item' v-if=\"item.citations.length!=0\"/>\n            </td>\n            <td>\n            {{ item.license[0] }}\n            <!-- Match license to spdx-->\n            </td>\n            <td>\n            {{ formatNumber(item.score) }} \n            </td>\n        </tr>\n        </tbody>\n    </template>\n    </v-data-table>\n    </div>\n</template>\n\n<script>\nimport PubPlot from './PubPlot.vue'\nimport SourceAvatar from './SourceAvatar.vue'\nimport FilterBtn from './FilterBtn.vue'\n\n\nexport default {\n    name : 'Table',\n    props: [\"tools\"],\n    components : {\n        PubPlot,\n        SourceAvatar,\n        FilterBtn\n    },\n    data() {\n        return {\n            toggle_sources: [0,1,2,3,4,5,6],\n            toggle_types: [0,1,2,3,4],\n            activeResults: true,\n            panel: 1,\n            search: '',\n            selected: null,\n            isHovering: false,\n            longResults:[],\n            avatars: {\n                biotools: {\n                    src:'elixir-logo.svg',\n                    color:'orange',\n                    content:'bio.tools',\n                    url:'bio.tools',\n                    label: 'biotools',\n                },\n                bioconda: {\n                    src:'bioconda-logo.svg',\n                    color:'#005500',\n                    content:'bioconda',\n                    url:'',\n                    label:'bioconda'\n                },\n                github: {\n                    src:'github-logo.svg',\n                    color:'black',\n                    content:'GitHub',\n                    url:'github.org',\n                    label:'github'\n                },\n                bioconductor: {\n                    src:'bioconductor-logo.svg',\n                    color:'#2f93ba',\n                    content:'Bioconductor',\n                    url:'',\n                    label:'bioconductor'\n                },\n                galaxy: {\n                    src: 'galaxy-logo.svg',\n                    color: '#134798',\n                    content: 'Galaxy Eu',\n                    url:'',\n                    label: 'galaxy'\n                },\n                sourceforge: {\n                    src: 'sourceforge-logo.svg',\n                    color: '#ff6602',\n                    content: 'SourceForge',\n                    url:'',\n                    label: 'sourceforge'\n                },\n                bitbucket: {\n                    src: 'bitbucket-logo.svg',\n                    color: '#005ed9',\n                    content: 'Bitbucket',\n                    url:'',\n                    label: 'bitbucket'\n                },\n                other: {\n                    src: 'other.svg',\n                    color: '#535682',\n                    content: 'Homepage',\n                    url:'',\n                    label: 'other'\n                }\n            },\n            linksURLs: [\n                {id : 'doi',  template : 'https://doi.org/'},\n                {id : 'pmcid', template : 'https://www.ncbi.nlm.nih.gov/pmc/articles/'},\n                {id : 'pmid', template :'https://pubmed.ncbi.nlm.nih.gov/'},\n                {id : 'url', template: ''}\n                ],\n            inputsHeaders: [\n                {text: 'Keyword', value: 'keyword'},\n                {text: 'Weight', value: 'weight'}\n            ],\n            typesAbb: {\n                'cmd' : {\n                'text': 'CMD',\n                'hover': 'Command-line Tool'\n                },\n                'web': {\n                'text': 'Web',\n                'hover': 'Web Application'\n                },\n                'db' : {\n                'text': 'DB',\n                'hover': 'Database'\n                },\n                'lib' : {\n                'text': 'Lib',\n                'hover': 'Library'\n                },\n                'unknown': {\n                'text': 'Unknown',\n                'hover': 'Unknown'\n                }\n            },\n            plot_colors: [\n            '#1f77b4',\n            '#ff7f0e',\n            '#2ca02c',\n            '#d62728',\n            '#9467bd',\n            '#8c564b',\n            '#e377c2',\n            '#7f7f7f',\n            '#bcbd22',\n            '#17becf' \n            ],\n            filtersMapping: {\n                sources : ['biotools', 'github', 'bioconda','galaxy', 'sourceforge', 'bioconductor', 'bitbucket'],\n                types : ['cmd', 'web', 'library', 'db', 'suite']\n            }\n        }\n    }, \n    computed: {\n        headers () {\n            return [\n                {text: '', align: 'start', sortable: false, value: 'down', width: '1em'},\n                {text: 'Tool Name', align: 'start', sortable: false, value: 'name', width: '5rem'},\n                {\n                    text: 'Type of Software', \n                    value: 'type', \n                    width: '6rem',\n                    filter: value => {\n                        return this.filter(this.toggle_types, this.typeMapping, value)\n                    }\n                },\n                {\n                    text: 'Availability', \n                    value: 'source', \n                    width: '6rem', \n                    filter: value => {\n                        return this.filter(this.toggle_sources, this.sourceMapping, value)\n                        }\n                },\n                {text: 'Description', value: 'description', width: '13rem'},\n                {text: 'Related Topics', value: 'edam_topics', width: '8rem'},\n                {text: 'Functionality', value: 'edam_operations', width: '8rem'},\n                {text: 'Publications', value: 'publications', width: '14rem'},\n                {text: 'Number of Citations', value: 'publications',  width: '13rem'},\n                {text: 'License', value: 'license', width: '5rem'},\n                {text: 'Score', value: 'score', width: '3rem'}\n                ]\n            },\n    },\n    mounted() {\n    this.tools.forEach((item) => {\n      if(item.description[0].length>320){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_operations.length>5){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_topics.length>5){\n        this.longResults.push(item.name)\n      }\n    })},\n    methods : {\n        filter(toggleArray, mappingFunct, value){\n            /* Convert filters index to sources labels*/\n            var mapped_filters = toggleArray.map(mappingFunct)\n            \n            /* Overlap between tool sources and filters*/\n            const overlapArray = mapped_filters.filter(item => value.includes(item))\n            /* If overlap, show tool */\n            console.log(overlapArray)\n            if(overlapArray.length>0){\n                return value\n            }else{\n                return false\n            }   \n        },\n        sourceMapping(x){\n            return this.filtersMapping.sources[x]\n        },\n        typeMapping(x){\n            return this.filtersMapping.types[x]\n        },\n        rowSelect(idx) {\n        console.log('selected', idx)\n        if(this.selected === idx){\n            this.selected = null;\n        } else {\n            this.selected = idx;\n      }\n        },\n        arrowsDownShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx != this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n        },\n        arrowsUpShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx === this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n        },\n        trimIfNotSelected(value, idx){\n      if(this.selected === idx){\n        return(value)\n      }else{\n        if(value.length > 320){\n          var short = `${value.substring(0,320)} ...`\n        }else{\n          return(value)\n        }\n        return(short)\n      }\n        },\n        trimListIfNotSelected(list, idx){\n        if(this.selected === idx){\n            return(list)\n        }else{\n            var short_list = list.slice(0,5)\n            return(short_list)\n        }\n        },\n        dictGet(key) {\n        var result = this.typesAbb[key] || {'text':key, \"hover\":key}\n        return(result)\n        },\n        build_pubs(item){\n        var labels = []\n        for (let i = 0; i < item.citations.length; i++) {\n            const links = []\n            for(var k = 0; k < this.linksURLs.length; k++){\n            const idType = this.linksURLs[k]['id']\n            if(item.citations[i][idType]!=undefined){\n                links.push(this.linksURLs[k]['template']+item.citations[i][idType]) \n            }\n            }\n            var label\n            if(item.citations[i]['year'] == undefined){\n            if(item.citations[i]['title'] == undefined){\n                label = 'link'\n            }else{\n                label = item.citations[i]['title']\n            }\n            }else{\n            label = `<span>${item.citations[i]['title']}(${item.citations[i]['year']})</span>`\n            }\n            labels.push({'label':label, \n                        'color':this.plot_colors[i],\n                        'year':item.citations[i]['year'],\n                        'links':links})\n        }\n        for (let e = 0; e < item.citations_other.length; e++) {\n            const links = []\n            for(var j = 0; j < this.linksURLs.length; j++){\n            const idType = this.linksURLs[j]['id']\n            if(item.citations_other[e][idType]!=undefined){\n                links.push(this.linksURLs[j]['template']+item.citations_other[e][idType]) \n            }\n            }\n            label = ''\n            if(item.citations_other[e]['title'] != '' && item.citations_other[e]['title'] != undefined){\n            labels.push({'label': item.citations_other[e]['title'],\n                        'color': 'black',\n                        'year': null,\n                        'links': links})\n            }\n        }\n        return(labels)\n        },\n        formats(formats){\n        var string = ''\n        for (let i = 0; i < formats.length; i++) {\n            if(i>0){\n            string= string + ', ' + formats[i]\n            }else{\n            string= string + ': ' + formats[i]\n            }\n        }\n        return(string)\n        },\n        span(title, year){\n        const span = `${title} (${year})`\n        return(span)\n        },\n        descriptionSpan(description){\n        const html = `<span>${description}</span>`\n        return(html)\n        },\n        formatNumber (num) {\n        return parseFloat(num).toFixed(2)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n.v-data-table >>> th {\n  font-size: smaller !important; \n}\n\n.v-data-table.v-data-table.v-data-table >>> tr:hover  {\n  background-color: white !important;\n}\n\n.v-data-table.v-data-table.v-data-table >>> td  {\n  font-size: smaller !important;\n  padding: .5em .5em 1em 1em;\n}\n#descr_panel{\n  font-size: smaller !important;\n}\n\n.cell-arrow{\n  color: darkgray;\n}\n\n.avatar-source{\n  margin-top: 0.4em;\n  margin-right: 0.2em;\n}\n\n#url{\n  width: 96%;\n  text-align: left;\n  margin-right: auto;\n  margin-left: auto;\n}\n#url p{\n  text-indent: .7rem;\n}\n\n.publications >>> .fas{\n  padding-right: .15em;\n  padding-left: .15em;\n  padding-bottom: .4em;\n}\n\n</style>"],"sourceRoot":"src/components"}]}