{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/PubPlot.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/PubPlot.vue","mtime":1644317406469},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/babel.config.js","mtime":1644317404877},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1644317405145},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1644317405349},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1644317406061}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBQbG90bHkgZnJvbSAncGxvdGx5LmpzLWRpc3QtbWluJzsKdmFyIGxheW91dCA9IHsKICB0aXRsZTogZmFsc2UsCiAgc2hvd2xlZ2VuZDogZmFsc2UsCiAgaG92ZXJsYWJlbDogewogICAgYmdjb2xvcjogIiNGRkYiCiAgfSwKICBtYXJnaW46IHsKICAgIGw6IDAsCiAgICB0OiAwLAogICAgYjogMCwKICAgIHI6IDAKICB9LAogIGZvbnQ6IHsKICAgIHNpemU6IDkKICB9LAogIHdpZHRoOiAyMDAsCiAgaGVpZ2h0OiAxMDAsCiAgeWF4aXM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHRleHQ6ICdjb3VudCcsCiAgICAgIHN0YW5kb2ZmOiA4LAogICAgICBmb250OiB7CiAgICAgICAgc2l6ZTogOAogICAgICB9CiAgICB9LAogICAgdGlja2Zvcm1hdDogJ2QnLAogICAgYXV0b21hcmdpbjogdHJ1ZQogIH0sCiAgeGF4aXM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHRleHQ6ICd5ZWFyJywKICAgICAgc3RhbmRvZmY6IDUsCiAgICAgIGZvbnQ6IHsKICAgICAgICBzaXplOiA4CiAgICAgIH0KICAgIH0sCiAgICB0aWNrYW5nbGU6IDMwLAogICAgdGlja2Zvcm1hdDogJ2QnLAogICAgYXV0b21hcmdpbjogdHJ1ZQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQdWJQbG90JywKICBwcm9wczogWydwdWJQbG90UHJvcHMnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbGFiZWxzOiBbXSwKICAgICAgcGxvdDogdHJ1ZQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5wdWJQbG90UHJvcHMuY2l0YXRpb25zLmxlbmd0aCA9PT0gMCkgewogICAgICB0aGlzLnBsb3QgPSBmYWxzZTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMucGxvdCA9IHRydWU7CiAgICB9CgogICAgUGxvdGx5Lm5ld1Bsb3QodGhpcy5wdWJQbG90UHJvcHMuX2lkLAogICAgLyogSlNPTiBvYmplY3QgKi8KICAgIHsKICAgICAgImRhdGEiOiB0aGlzLmJ1aWxkX3RyYWNlcygpLAogICAgICAiY29uZmlnIjogewogICAgICAgICJkaXNwbGF5TW9kZUJhciI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJsYXlvdXQiOiBsYXlvdXQKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgYnVpbGRfdHJhY2VzOiBmdW5jdGlvbiBidWlsZF90cmFjZXMoKSB7CiAgICAgIHZhciB0cmFjZXMgPSBbXTsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5wdWJQbG90UHJvcHMuY2l0YXRpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdmFyIHB1YiA9IHRoaXMucHViUGxvdFByb3BzLmNpdGF0aW9uc1tpXTsKICAgICAgICB2YXIgbmV3X2RhdGEgPSB7CiAgICAgICAgICB4OiBwdWJbJ3RyYWNlJ11bJ3gnXSwKICAgICAgICAgIHk6IHB1YlsndHJhY2UnXVsneSddLAogICAgICAgICAgbmFtZTogcHViWyd0aXRsZSddLAogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgdGV4dDogQXJyYXkocHViWyd0cmFjZSddWyd4J10ubGVuZ3RoKS5maWxsKHB1YlsndGl0bGUnXSksCiAgICAgICAgICBob3ZlcnRlbXBsYXRlOiAieWVhcjogJXt4OmR9IDwvYnI+PC9icj4iICsgImNvdW50OiAle3k6ZH0iICsgIjxleHRyYT48L2V4dHJhPiIsCiAgICAgICAgICBtb2RlOiAnbGluZXMrbWFya2VycycsCiAgICAgICAgICBsaW5lOiB7CiAgICAgICAgICAgIHdpZHRoOiAxCiAgICAgICAgICB9LAogICAgICAgICAgbWFya2VyOiB7CiAgICAgICAgICAgIHNpemU6IDQKICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIHRoaXMubGFiZWxzLnB1c2gocHViWyd0aXRsZSddKTsKICAgICAgICB0cmFjZXMucHVzaChuZXdfZGF0YSk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cmFjZXM7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["PubPlot.vue"],"names":[],"mappings":"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","sourcesContent":["<template v-if=\"plot\">\n  <div>\n    <div :id=\"pubPlotProps._id\" class=\"plot\">\n  </div>\n  </div>\n</template>\n\n<style scoped>\n#plot{\n  padding: 0%;\n  margin: 0%\n}\n#plot .modebar{\n    display: none !important;\n}\n</style>\n\n<script>\nimport Plotly from 'plotly.js-dist-min'\nvar layout = {title:false,\n              showlegend: false,\n              hoverlabel: { bgcolor: \"#FFF\" },\n              margin: { l:0, t:0, b:0, r:0},\n              font: {size: 9},\n              width: 200,\n              height: 100,\n              yaxis: {\n                title: {\n                  text: 'count',\n                  standoff: 8,\n                  font: {\n                    size: 8\n                  }},\n              tickformat: 'd',\n              automargin: true\n              },\n              xaxis : {\n                title: {\n                  text: 'year',\n                  standoff: 5,\n                  font: {\n                    size: 8\n                  }\n                },\n                tickangle: 30,\n                tickformat: 'd',\n                automargin: true\n                }};\n\nexport default {\n  name: 'PubPlot',\n  props: ['pubPlotProps'],\n  data() {\n    return {\n      labels : [],\n      plot: true\n    }\n  },\n  mounted() {\n    if(this.pubPlotProps.citations.length === 0){\n      this.plot = false\n      }\n    else{this.plot = true}\n    Plotly.newPlot(this.pubPlotProps._id, /* JSON object */ {\n      \"data\": this.build_traces(),\n      \"config\": { \"displayModeBar\": false  },\n      \"layout\": layout\n      })\n  },\n  methods: {\n    build_traces(){\n      var traces = []\n      for (let i = 0; i < this.pubPlotProps.citations.length; i++) {\n        var pub = this.pubPlotProps.citations[i]\n        var new_data = {x : pub['trace']['x'], \n                        y : pub['trace']['y'],\n                        name: pub['title'],\n                        type: 'scatter',\n                        text: Array(pub['trace']['x'].length).fill(pub['title']),\n                        hovertemplate: \n                          \"year: %{x:d} </br></br>\" + \n                          \"count: %{y:d}\" +\n                          \"<extra></extra>\",\n                        mode: 'lines+markers',\n                        line: {\n                          width: 1\n                        },\n                        marker:{\n                          size: 4\n                        }\n                        }\n        this.labels.push(pub['title'])\n        traces.push(new_data)\n      }\n      return(traces)\n    }\n}\n}\n</script>\n"],"sourceRoot":"src/components"}]}