{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/thread-loader/dist/cjs.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/Table.vue","mtime":1651667482059},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/babel.config.js","mtime":1644317404877},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1651834834729},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/thread-loader/dist/cjs.js","mtime":1651834834917},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1651834835865},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1651834834729},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1651834831509}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["name","props","components","FilterBtn","ArrowsCol","NameCol","TypeCol","SourcesCol","DescriptionCol","EnumCol","PublicationsCol","CitationsCol","LicenseCol","ScoreCol","data","inputValues","outputValues","toggle_sources","toggle_types","activeResults","panel","search","selected","isHovering","longResults","filtersMapping","sources","types","computed","headers","text","align","sortable","value","width","filter","mounted","methods","filterDataType","console","toggleArray","mappingFunct","sourceMapping","x","typeMapping","rowSelect","idx","arrowsDownShow","toolID","arrowsUpShow","trimListIfNotSelected","list","formats","string","span","title","year","formatNumber","num"],"sourceRoot":"src/components","sources":["Table.vue"],"sourcesContent":["<template>\n    <div>\n        <v-card elevation=\"2\" style=\"margin-bottom:4em; margin-top:2em\">\n            <v-form>\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"12\" class=\"py-2\">\n                        <h5>\n                            Filters\n                        </h5>\n                        </v-col>\n                        \n                        <v-col\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"3\"\n                        class=\"py-2\"\n                        >   \n                            <span class=\"filterTitle\">\n                            Availability\n                            </span>\n                            <v-btn-toggle\n                            v-model=\"toggle_sources\"\n                            multiple\n                            dense\n                            group\n                            class=\"flex-wrap\" \n                            >\n                                <FilterBtn \n                                    v-for=\"label in filtersMapping.sources\" \n                                    :key=\"filtersMapping.sources.indexOf(label)\" \n                                    :label=\"label\" \n                                    icon />\n                            </v-btn-toggle>\n                        </v-col>\n                        <v-col\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"3\"\n                        class=\"py-2\"\n                        >    \n                        <span class=\"filterTitle\">\n                            Type of Software\n                        </span>\n                            <v-btn-toggle\n                                v-model=\"toggle_types\"\n                                multiple\n                                dense\n                                group\n                                class=\"flex-wrap\" \n                            >   \n                                <FilterBtn  \n                                    v-for=\"item in filtersMapping.types\" \n                                    :key=\"filtersMapping.types.indexOf(item)\" \n                                    :label=\"item\" \n                                    />\n\n                            </v-btn-toggle>\n                        </v-col>\n\n                        <v-col\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"2\"\n                        class=\"py-2\"\n                        >\n                            <span class=\"filterTitle\">\n                                Input Data Format\n                            </span>\n                            <v-text-field\n                                v-model=\"inputValues\"\n                                regular\n                                dense\n                                label=\"Type format here\"\n                                style=\"margin-top:.8em\"\n                            ></v-text-field>\n                        </v-col>\n                        <v-col\n                        cols=\"0\"\n                        sm=\"0\"\n                        md=\"1\"\n                        >\n                        </v-col>\n                        <v-col\n                        cols=\"12\"\n                        sm=\"6\"\n                        md=\"2\"\n                        class=\"py-2\"\n                        >\n                            <span class=\"filterTitle\">\n                                Output Data Format\n                            </span>\n                            <v-text-field\n                                v-model=\"outputValues\"\n                                regular\n                                dense\n                                label=\"Type format here\"\n                                style=\"margin-top:.8em\"\n                            ></v-text-field>\n                        </v-col>\n\n                    </v-row>\n                </v-container>\n            </v-form>\n        </v-card >\n    <v-data-table\n    v-model=\"rowSelect\"\n    :headers=\"headers\"\n    :items=\"tools\"\n    :items-per-page=\"10\"\n    :search=\"search\"\n    :sort-by=\"['score']\"\n    :sort-desc=\"[true]\"\n    multi-sort\n    class=\"elevation-0\" \n    >\n    <template v-slot:[`body`]=\"{ items }\">\n        <tbody>\n        <tr \n            @click=\"rowSelect(key)\" \n            v-for=\"(item, key) in items\" :key=\"item._id.toString()\"\n        >\n            <ArrowsCol :down=\"arrowsDownShow(key, item.name)\" :up=\"arrowsUpShow(key, item.name)\"/>\n            <NameCol :name=\"item.name\" />\n            <TypeCol :type=\"item.type\" />\n            <SourcesCol :itemSources=\"item.sources_labels\" />\n            <DescriptionCol :description=\"item.description\" :selected=\"selected\" :idx=\"key\" />\n            <EnumCol \n                :items=\"item.edam_topics\" \n                :selected=\"selected\" \n                :arrowsUp=\"arrowsUpShow(key, item.name)\"\n                :idx=\"key\" />\n            <EnumCol \n                :items=\"item.edam_operations\"\n                :selected=\"selected\"\n                :arrowsUp=\"arrowsUpShow(key, item.name)\"\n                :idx=\"key\"/>\n            <!-- Put following cells (input data types and output data types) as separate components-->\n            <td>\n                <ul>\n                    <li v-for=\"format in item.input_format_labels\" :key=\"item.input_format_labels.indexOf(format)\">\n                    {{ format }}\n                    </li>\n                    <span v-if=\"dots\">...</span>                      \n                </ul>\n            </td>\n\n            <td>\n                <ul>\n                    <li v-for=\"format in item.output_format_labels\" :key=\"item.output_format_labels.indexOf(format)\">\n                    {{ format }}\n                    </li>\n                    <span v-if=\"dots\">...</span>                      \n                </ul>\n            </td>\n\n\n            <PublicationsCol :item=\"item\" :idx=\"key\" />\n            <CitationsCol :pubPlotProps='item' />\n\n            <LicenseCol :licenses=\"item.license\"  />\n            <ScoreCol :score=\"item.score\" />\n\n        </tr>\n        </tbody>\n    </template>\n    </v-data-table>\n    </div>\n</template>\n\n<script>\n\nimport FilterBtn from './FilterBtn.vue'\nimport ArrowsCol from './ArrowsCol.vue'\nimport NameCol from './NameCol.vue'\nimport TypeCol from './TypeCol.vue'\nimport SourcesCol from './SourcesCol.vue'\nimport DescriptionCol from './DescriptionCol.vue'\nimport EnumCol from './EnumCol.vue'\nimport PublicationsCol from './PublicationsCol.vue'\nimport CitationsCol from './CitationsCol.vue'\nimport LicenseCol from './LicenseCol.vue'\nimport ScoreCol from './ScoreCol.vue'\n\nexport default {\n    name : 'Table',\n    props: [\"tools\"],\n    components : {\n        FilterBtn,\n        ArrowsCol,\n        NameCol,\n        TypeCol,\n        SourcesCol,\n        DescriptionCol,\n        EnumCol,\n        PublicationsCol,\n        CitationsCol,\n        LicenseCol,\n        ScoreCol\n    },\n    data() {\n        return {\n            inputValues: null,\n            outputValues: null,\n            toggle_sources: [0,1,2,3,4,5,6],\n            toggle_types: [0,1,2,3,4],\n            activeResults: true,\n            panel: 1,\n            search: '',\n            selected: null,\n            isHovering: false,\n            longResults:[],\n            filtersMapping: {\n                sources : ['biotools', 'github', 'bioconda','galaxy', 'sourceforge', 'bioconductor', 'bitbucket'],\n                types : ['cmd', 'web', 'library', 'db', 'suite']\n            }\n        }\n    }, \n    computed: {\n        headers () {\n            return [\n                {text: '', align: 'start', sortable: false, value: 'down', width: '1em'},\n                {text: 'Tool Name', align: 'start', sortable: false, value: 'name', width: '3rem'},\n                {\n                    text: 'Type of Software', \n                    value: 'type', \n                    width: '6rem',\n                    filter: value => {\n                        return this.filter(this.toggle_types, this.typeMapping, value)\n                    }\n                },\n                {\n                    text: 'Availability', \n                    value: 'source', \n                    width: '6rem', \n                    filter: value => {\n                        return this.filter(this.toggle_sources, this.sourceMapping, value)\n                        }\n                },\n                {text: 'Description', value: 'description', width: '13rem'},\n                {text: 'Related Topics', value: 'edam_topics', width: '8rem'},\n                {text: 'Functionality', value: 'edam_operations', width: '8rem'},\n                {\n                    text: 'Input Data Format', \n                    value: 'input_format_labels', \n                    width: '8rem',\n                    filter: value => {\n                        if( value != undefined && this.inputValues != null ){\n                            return this.filterDataType(this.inputValues, value)\n                        }else{\n                            return value\n                        }\n                    }\n                },\n                {\n                    text: 'Output Data Format', \n                    value: 'output_format_labels', \n                    width: '8rem',\n                    filter: value => {\n                        if( value != undefined && this.outputValues != null ){\n                            return this.filterDataType(this.outputValues, value)\n                        }else{\n                            return value\n                        }\n                    }\n                },\n                {text: 'Publications', value: 'publications', width: '13rem'},\n                {text: 'Number of Citations', value: 'publications',  width: '13rem'},\n                {text: 'License', value: 'license', width: '5rem'},\n                {text: 'Score', value: 'score', width: '3rem'}\n                ]\n            },\n    },\n    mounted() {\n    this.tools.forEach((item) => {\n      if(item.description[0].length>320){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_operations.length>5){\n        this.longResults.push(item.name)\n      }\n      if(item.edam_topics.length>5){\n        this.longResults.push(item.name)\n      }\n    })},\n    methods : {\n        filterDataType(inputValues, value){\n            console.log(value)\n            const overlapArray = [inputValues].filter(item => value.includes(item))\n            /* If overlap, show tool */\n            console.log(overlapArray)\n            if(overlapArray.length>0){\n                return value\n            }else{\n                return false\n            }   \n\n        },\n        filter(toggleArray, mappingFunct, value){\n            /* Convert filters index to sources labels*/\n            var mapped_filters = toggleArray.map(mappingFunct)\n            \n            /* Overlap between tool sources and filters*/\n            const overlapArray = mapped_filters.filter(item => value.includes(item))\n            /* If overlap, show tool */\n            console.log(overlapArray)\n            if(overlapArray.length>0){\n                return value\n            }else{\n                return false\n            }   \n        },\n        sourceMapping(x){\n            return this.filtersMapping.sources[x]\n        },\n        typeMapping(x){\n            return this.filtersMapping.types[x]\n        },\n        rowSelect(idx) {\n        console.log('selected', idx)\n        if(this.selected === idx){\n            this.selected = null;\n        } else {\n            this.selected = idx;\n      }\n        },\n        arrowsDownShow(idx, toolID){\n            if(this.longResults.includes(toolID) && idx != this.selected){\n                return(true)\n            }else{\n                return(false)\n            }\n        },\n        arrowsUpShow(idx, toolID){\n            if(this.longResults.includes(toolID) && idx === this.selected){\n                return(true)\n            }else{\n                return(false)\n            }\n        },\n        trimListIfNotSelected(list, idx){\n        if(this.selected === idx){\n            return(list)\n        }else{\n            var short_list = list.slice(0,5)\n            return(short_list)\n        }\n        },\n        \n        formats(formats){\n            var string = ''\n            for (let i = 0; i < formats.length; i++) {\n                if(i>0){\n                string= string + ', ' + formats[i]\n                }else{\n                string= string + ': ' + formats[i]\n                }\n        }\n        return(string)\n        },\n        span(title, year){\n        const span = `${title} (${year})`\n        return(span)\n        },\n        \n        formatNumber (num) {\n        return parseFloat(num).toFixed(2)\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n.v-data-table >>> th {\n  font-size: smaller !important; \n}\n\n.v-data-table.v-data-table.v-data-table >>> tr:hover  {\n  background-color: white !important;\n}\n\n.v-data-table.v-data-table.v-data-table >>> td  {\n  font-size: smaller !important;\n  padding: .5em .5em 1em 1em;\n}\n\n#url{\n  width: 96%;\n  text-align: left;\n  margin-right: auto;\n  margin-left: auto;\n}\n#url p{\n  text-indent: .7rem;\n}\n\n\n</style>"]}]}