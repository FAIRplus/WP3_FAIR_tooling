{"remainingRequest":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/thread-loader/dist/cjs.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/src/components/CitationsCol.vue","mtime":1651152106874},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/babel.config.js","mtime":1644317404877},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1651834834729},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/thread-loader/dist/cjs.js","mtime":1651834834917},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/babel-loader/lib/index.js","mtime":1651834835865},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1651834834729},{"path":"/home/eva/projects/FAIRplus/tooling/WP3_FAIR_tooling/front-end/node_modules/vue-loader/lib/index.js","mtime":1651834831509}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBQbG90bHkgZnJvbSAncGxvdGx5LmpzLWRpc3QtbWluJzsKdmFyIGxheW91dCA9IHsKICB0aXRsZTogZmFsc2UsCiAgc2hvd2xlZ2VuZDogZmFsc2UsCiAgaG92ZXJsYWJlbDogewogICAgYmdjb2xvcjogIiNGRkYiCiAgfSwKICBtYXJnaW46IHsKICAgIGw6IDAsCiAgICB0OiAwLAogICAgYjogMCwKICAgIHI6IDAKICB9LAogIGZvbnQ6IHsKICAgIHNpemU6IDkKICB9LAogIHdpZHRoOiAyMDAsCiAgaGVpZ2h0OiAxMDAsCiAgeWF4aXM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHRleHQ6ICdjb3VudCcsCiAgICAgIHN0YW5kb2ZmOiA4LAogICAgICBmb250OiB7CiAgICAgICAgc2l6ZTogOAogICAgICB9CiAgICB9LAogICAgdGlja2Zvcm1hdDogJ2QnLAogICAgYXV0b21hcmdpbjogdHJ1ZQogIH0sCiAgeGF4aXM6IHsKICAgIHRpdGxlOiB7CiAgICAgIHRleHQ6ICd5ZWFyJywKICAgICAgc3RhbmRvZmY6IDUsCiAgICAgIGZvbnQ6IHsKICAgICAgICBzaXplOiA4CiAgICAgIH0KICAgIH0sCiAgICB0aWNrYW5nbGU6IDMwLAogICAgdGlja2Zvcm1hdDogJ2QnLAogICAgYXV0b21hcmdpbjogdHJ1ZQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDaXRhdGlvbnNDb2wnLAogIHByb3BzOiBbJ3B1YlBsb3RQcm9wcyddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsYWJlbHM6IFtdLAogICAgICBwbG90OiB0cnVlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnMubGVuZ3RoID09PSAwKSB7CiAgICAgIHRoaXMucGxvdCA9IGZhbHNlOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy5wbG90ID0gdHJ1ZTsKICAgICAgUGxvdGx5Lm5ld1Bsb3QodGhpcy5wdWJQbG90UHJvcHMuX2lkLAogICAgICAvKiBKU09OIG9iamVjdCAqLwogICAgICB7CiAgICAgICAgImRhdGEiOiB0aGlzLmJ1aWxkX3RyYWNlcygpLAogICAgICAgICJjb25maWciOiB7CiAgICAgICAgICAiZGlzcGxheU1vZGVCYXIiOiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgImxheW91dCI6IGxheW91dAogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGJ1aWxkX3RyYWNlczogZnVuY3Rpb24gYnVpbGRfdHJhY2VzKCkgewogICAgICB2YXIgdHJhY2VzID0gW107CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucHViUGxvdFByb3BzLmNpdGF0aW9ucy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBwdWIgPSB0aGlzLnB1YlBsb3RQcm9wcy5jaXRhdGlvbnNbaV07CiAgICAgICAgdmFyIG5ld19kYXRhID0gewogICAgICAgICAgeDogcHViWyd0cmFjZSddWyd4J10sCiAgICAgICAgICB5OiBwdWJbJ3RyYWNlJ11bJ3knXSwKICAgICAgICAgIG5hbWU6IHB1YlsndGl0bGUnXSwKICAgICAgICAgIHR5cGU6ICdzY2F0dGVyJywKICAgICAgICAgIHRleHQ6IEFycmF5KHB1YlsndHJhY2UnXVsneCddLmxlbmd0aCkuZmlsbChwdWJbJ3RpdGxlJ10pLAogICAgICAgICAgaG92ZXJ0ZW1wbGF0ZTogInllYXI6ICV7eDpkfSA8L2JyPjwvYnI+IiArICJjb3VudDogJXt5OmR9IiArICI8ZXh0cmE+PC9leHRyYT4iLAogICAgICAgICAgbW9kZTogJ2xpbmVzK21hcmtlcnMnLAogICAgICAgICAgbGluZTogewogICAgICAgICAgICB3aWR0aDogMQogICAgICAgICAgfSwKICAgICAgICAgIG1hcmtlcjogewogICAgICAgICAgICBzaXplOiA0CiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICB0aGlzLmxhYmVscy5wdXNoKHB1YlsndGl0bGUnXSk7CiAgICAgICAgdHJhY2VzLnB1c2gobmV3X2RhdGEpOwogICAgICB9CgogICAgICByZXR1cm4gdHJhY2VzOwogICAgfQogIH0KfTs="},{"version":3,"mappings":";;;;;;;;;AASA;AAEA;EAAAA;EACAC,iBADA;EAEAC;IAAAC;EAAA,CAFA;EAGAC;IAAAC;IAAAC;IAAAC;IAAAC;EAAA,CAHA;EAIAC;IAAAC;EAAA,CAJA;EAKAC,UALA;EAMAC,WANA;EAOAC;IACAb;MACAc,aADA;MAEAC,WAFA;MAGAN;QACAC;MADA;IAHA,CADA;IAOAM,eAPA;IAQAC;EARA,CAPA;EAiBAC;IACAlB;MACAc,YADA;MAEAC,WAFA;MAGAN;QACAC;MADA;IAHA,CADA;IAQAS,aARA;IASAH,eATA;IAUAC;EAVA;AAjBA;AA8BA;EACAG,oBADA;EAEAC,uBAFA;EAGAC,IAHA,kBAGA;IACA;MACAC,UADA;MAEAC;IAFA;EAIA,CARA;EASAC,OATA,qBASA;IACA;MACA;IACA,CAFA,MAGA;MACA;MACAC;MAAA;MAAA;QACA,2BADA;QAEA;UAAA;QAAA,CAFA;QAGA;MAHA;IAKA;EACA,CArBA;EAsBAC;IACAC,YADA,0BACA;MACA;;MACA;QACA;QACA;UAAAC;UACAC,oBADA;UAEAV,kBAFA;UAGAW,eAHA;UAIAjB,wDAJA;UAKAkB,eACA,4BACA,eADA,GAEA,iBARA;UASAC,qBATA;UAUAC;YACAvB;UADA,CAVA;UAaAwB;YACAzB;UADA;QAbA;QAiBA;QACA0B;MACA;;MACA;IACA;EA1BA;AAtBA","names":["title","showlegend","hoverlabel","bgcolor","margin","l","t","b","r","font","size","width","height","yaxis","text","standoff","tickformat","automargin","xaxis","tickangle","name","props","data","labels","plot","mounted","Plotly","methods","build_traces","x","y","type","hovertemplate","mode","line","marker","traces"],"sourceRoot":"src/components","sources":["CitationsCol.vue"],"sourcesContent":["<template>\n    <td>\n        <div v-if=\"pubPlotProps.citations.length!=0\">\n            <div :id=\"pubPlotProps._id\" class=\"plot\"></div>\n        </div>\n    </td>\n</template>\n\n<script>\nimport Plotly from 'plotly.js-dist-min'\n\nvar layout = {title:false,\n              showlegend: false,\n              hoverlabel: { bgcolor: \"#FFF\" },\n              margin: { l:0, t:0, b:0, r:0},\n              font: {size: 9},\n              width: 200,\n              height: 100,\n              yaxis: {\n                title: {\n                  text: 'count',\n                  standoff: 8,\n                  font: {\n                    size: 8\n                  }},\n              tickformat: 'd',\n              automargin: true\n              },\n              xaxis : {\n                title: {\n                  text: 'year',\n                  standoff: 5,\n                  font: {\n                    size: 8\n                  }\n                },\n                tickangle: 30,\n                tickformat: 'd',\n                automargin: true\n                }};\n\nexport default {\n    name: 'CitationsCol',\n    props: ['pubPlotProps'],\n    data() {\n        return {\n        labels : [],\n        plot:true\n        }\n    },\n    mounted() {\n        if(this.pubPlotProps.citations.length === 0){\n            this.plot = false\n        }\n        else{\n            this.plot = true\n            Plotly.newPlot(this.pubPlotProps._id, /* JSON object */ {\n            \"data\": this.build_traces(),\n            \"config\": { \"displayModeBar\": false  },\n            \"layout\": layout\n            }\n        )}\n    },\n    methods: {\n        build_traces(){\n            var traces = []\n            for (let i = 0; i < this.pubPlotProps.citations.length; i++) {\n                var pub = this.pubPlotProps.citations[i]\n                var new_data = {x : pub['trace']['x'], \n                                y : pub['trace']['y'],\n                                name: pub['title'],\n                                type: 'scatter',\n                                text: Array(pub['trace']['x'].length).fill(pub['title']),\n                                hovertemplate: \n                                    \"year: %{x:d} </br></br>\" + \n                                    \"count: %{y:d}\" +\n                                    \"<extra></extra>\",\n                                mode: 'lines+markers',\n                                line: {\n                                    width: 1\n                                    },\n                                marker:{\n                                    size: 4\n                                    }\n                                }\n                this.labels.push(pub['title'])\n                traces.push(new_data)\n                }\n            return(traces)\n        }\n    }\n}\n\n</script>\n\n<style scoped>\n#plot{\n  padding: 0%;\n  margin: 0%\n}\n#plot .modebar{\n    display: none !important;\n}\n</style>"]}]}