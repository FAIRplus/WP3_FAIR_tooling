{"remainingRequest":"/home/eva/tooldiscoverer/node_modules/babel-loader/lib/index.js!/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/tooldiscoverer/src/components/Results.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/tooldiscoverer/src/components/Results.vue","mtime":1640460874128},{"path":"/home/eva/tooldiscoverer/babel.config.js","mtime":1640023482378},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/babel-loader/lib/index.js","mtime":1640024185676},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js","mtime":1640024185900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNvdXJjZUF2YXRhciBmcm9tICcuL1NvdXJjZUF2YXRhci52dWUnOwppbXBvcnQgUGxvdGx5IGZyb20gJ3Bsb3RseS5qcy1kaXN0LW1pbic7CnZhciBsYXlvdXQgPSB7CiAgdGl0bGU6IGZhbHNlLAogIHNob3dsZWdlbmQ6IGZhbHNlLAogIG1hcmdpbjogewogICAgbDogMTAsCiAgICB0OiAxMCwKICAgIGI6IDE0LAogICAgcjogMTAKICB9Cn07CnZhciB0cmFjZTEgPSB7CiAgeDogWzIwMTcsIDIwMTgsIDIwMTksIDIwMjBdLAogIHk6IFsyLCAxNCwgMjMsIDM1XSwKICB0eXBlOiAnc2NhdHRlcicKfTsKdmFyIHRyYWNlMiA9IHsKICB4OiBbMjAxNywgMjAxOCwgMjAxOSwgMjAyMF0sCiAgeTogWzAsIDAsIDMsIDE1XSwKICB0eXBlOiAnc2NhdHRlcicKfTsKdmFyIGRhdGEgPSBbdHJhY2UxLCB0cmFjZTJdOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Jlc3VsdHMnLAogIHByb3BzOiBbJ3Rvb2xzJywgJ2lucHV0UGFyYW1ldGVycyddLAogIGNvbXBvbmVudHM6IHsKICAgIFNvdXJjZUF2YXRhcjogU291cmNlQXZhdGFyCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYWN0aXZlUmVzdWx0czogdHJ1ZSwKICAgICAgYXZhdGFyczogewogICAgICAgIGJpb3Rvb2xzOiB7CiAgICAgICAgICBzcmM6ICdlbGl4aXItbG9nby5zdmcnLAogICAgICAgICAgY29sb3I6ICdvcmFuZ2UnLAogICAgICAgICAgY29udGVudDogJ2Jpby50b29scycsCiAgICAgICAgICB1cmw6ICdiaW8udG9vbHMnCiAgICAgICAgfSwKICAgICAgICBiaW9jb25kYTogewogICAgICAgICAgc3JjOiAnYmlvY29uZGEtbG9nby5zdmcnLAogICAgICAgICAgY29sb3I6ICcjMDA1NTAwJywKICAgICAgICAgIGNvbnRlbnQ6ICdiaW9jb25kYScsCiAgICAgICAgICB1cmw6ICcnCiAgICAgICAgfSwKICAgICAgICBnaXRodWI6IHsKICAgICAgICAgIHNyYzogJ2dpdGh1Yi1sb2dvLnN2ZycsCiAgICAgICAgICBjb2xvcjogJ2JsYWNrJywKICAgICAgICAgIGNvbnRlbnQ6ICdHaXRIdWInLAogICAgICAgICAgdXJsOiAnZ2l0aHViLm9yZycKICAgICAgICB9LAogICAgICAgIGJpb2NvbmR1Y3RvcjogewogICAgICAgICAgc3JjOiAnYmlvY29uZHVjdG9yLWxvZ28uc3ZnJywKICAgICAgICAgIGNvbG9yOiAnIzJmOTNiYScsCiAgICAgICAgICBjb250ZW50OiAnQmlvY29uZHVjdG9yJywKICAgICAgICAgIHVybDogJycKICAgICAgICB9LAogICAgICAgIGdhbGF4eTogewogICAgICAgICAgc3JjOiAnZ2FsYXh5LWxvZ28uc3ZnJywKICAgICAgICAgIGNvbG9yOiAnIzEzNDc5OCcsCiAgICAgICAgICBjb250ZW50OiAnR2FsYXh5IEV1JywKICAgICAgICAgIHVybDogJycKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHBhbmVsOiAwLAogICAgICBzZWFyY2g6ICcnLAogICAgICBzZWxlY3RlZDogbnVsbCwKICAgICAgaXNIb3ZlcmluZzogZmFsc2UsCiAgICAgIGxvbmdSZXN1bHRzOiBbXSwKICAgICAgaGVhZGVyczogW3sKICAgICAgICB0ZXh0OiAnJywKICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICdkb3duJywKICAgICAgICB3aWR0aDogJzFlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdUb29sJywKICAgICAgICBhbGlnbjogJ3N0YXJ0JywKICAgICAgICBzb3J0YWJsZTogZmFsc2UsCiAgICAgICAgdmFsdWU6ICdUb29sJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ1R5cGUgb2YgU29mdHdhcmUnLAogICAgICAgIHZhbHVlOiAnVHlwZScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdTb3VyY2VzJywKICAgICAgICB2YWx1ZTogJ3NvdXJjZXMnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnRGVzY3JpcHRpb24nLAogICAgICAgIHZhbHVlOiAnRGVzY3JpcHRpb24nLAogICAgICAgIHdpZHRoOiAnMjByZW0nCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnUmVsYXRlZCBUb3BpY3MnLAogICAgICAgIHZhbHVlOiAnVG9waWNzJywKICAgICAgICB3aWR0aDogJzEycmVtJwogICAgICB9LCB7CiAgICAgICAgdGV4dDogJ0Z1bmN0aW9uYWxpdHknLAogICAgICAgIHZhbHVlOiAnT3BlcmF0aW9ucycsCiAgICAgICAgd2lkdGg6ICcxMnJlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdOdW1iZXIgb2YgQ2l0YXRpb25zJywKICAgICAgICB2YWx1ZTogJ0NpdGF0aW9ucycsCiAgICAgICAgd2lkdGg6ICcxMnJlbScKICAgICAgfSwgewogICAgICAgIHRleHQ6ICdMaWNlbnNlJywKICAgICAgICB2YWx1ZTogJ0xpY2Vuc2UnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnU2NvcmUnLAogICAgICAgIHZhbHVlOiAna2V5d29yZHNfc2NvcmUnCiAgICAgIH1dLAogICAgICBpbnB1dHNIZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICdLZXl3b3JkJywKICAgICAgICB2YWx1ZTogJ2tleXdvcmQnCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAnV2VpZ2h0JywKICAgICAgICB2YWx1ZTogJ3dlaWdodCcKICAgICAgfV0sCiAgICAgIHR5cGVzQWJiOiB7CiAgICAgICAgJ0NvbW1hbmQtbGluZSB0b29sJzogewogICAgICAgICAgJ3RleHQnOiAnQ01EJywKICAgICAgICAgICdob3Zlcic6ICdDb21tYW5kLWxpbmUgVG9vbCcKICAgICAgICB9LAogICAgICAgICdXZWIgYXBwbGljYXRpb24nOiB7CiAgICAgICAgICAndGV4dCc6ICdXZWInLAogICAgICAgICAgJ2hvdmVyJzogJ1dlYiBBcHBsaWNhdGlvbicKICAgICAgICB9LAogICAgICAgICd1bmtub3duJzogewogICAgICAgICAgJ3RleHQnOiAnVW5rbm93bicsCiAgICAgICAgICAnaG92ZXInOiAnVW5rbm93bicKICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnRvb2xzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgaWYgKGl0ZW0uRGVzY3JpcHRpb24ubGVuZ3RoID4gMjAwKSB7CiAgICAgICAgX3RoaXMubG9uZ1Jlc3VsdHMucHVzaChpdGVtLlRvb2wpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChpdGVtLlRvcGljcy5sZW5ndGggPiAzKSB7CiAgICAgICAgX3RoaXMubG9uZ1Jlc3VsdHMucHVzaChpdGVtLlRvb2wpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgIH0pLCBQbG90bHkubmV3UGxvdCgiZ2QiLAogICAgLyogSlNPTiBvYmplY3QgKi8KICAgIHsKICAgICAgImRhdGEiOiBkYXRhLAogICAgICAiY29uZmlnIjogewogICAgICAgICJkaXNwbGF5TW9kZUJhciI6IGZhbHNlCiAgICAgIH0sCiAgICAgICJsYXlvdXQiOiBsYXlvdXQKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgcm93U2VsZWN0OiBmdW5jdGlvbiByb3dTZWxlY3QoaWR4KSB7CiAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3RlZCcsIGlkeCk7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gaWR4KSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZWxlY3RlZCA9IGlkeDsKICAgICAgfQogICAgfSwKICAgIGFycm93c0Rvd25TaG93OiBmdW5jdGlvbiBhcnJvd3NEb3duU2hvdyhpZHgsIHRvb2xJRCkgewogICAgICBpZiAodGhpcy5sb25nUmVzdWx0cy5pbmNsdWRlcyh0b29sSUQpICYmIGlkeCAhPSB0aGlzLnNlbGVjdGVkKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9LAogICAgYXJyb3dzVXBTaG93OiBmdW5jdGlvbiBhcnJvd3NVcFNob3coaWR4LCB0b29sSUQpIHsKICAgICAgaWYgKHRoaXMubG9uZ1Jlc3VsdHMuaW5jbHVkZXModG9vbElEKSAmJiBpZHggPT09IHRoaXMuc2VsZWN0ZWQpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICB0cmltSWZOb3RTZWxlY3RlZDogZnVuY3Rpb24gdHJpbUlmTm90U2VsZWN0ZWQodmFsdWUsIGlkeCkgewogICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gaWR4KSB7CiAgICAgICAgcmV0dXJuIHZhbHVlOwogICAgICB9IGVsc2UgewogICAgICAgIGlmICh2YWx1ZS5sZW5ndGggPiAyNTUpIHsKICAgICAgICAgIHZhciBzaG9ydCA9ICIiLmNvbmNhdCh2YWx1ZS5zdWJzdHJpbmcoMCwgMjAwKSwgIi4uLiIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gc2hvcnQ7CiAgICAgIH0KICAgIH0sCiAgICB0cmltTGlzdElmTm90U2VsZWN0ZWQ6IGZ1bmN0aW9uIHRyaW1MaXN0SWZOb3RTZWxlY3RlZChsaXN0LCBpZHgpIHsKICAgICAgaWYgKHRoaXMuc2VsZWN0ZWQgPT09IGlkeCkgewogICAgICAgIHJldHVybiBsaXN0OwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBzaG9ydF9saXN0ID0gbGlzdC5zbGljZSgwLCAzKTsKICAgICAgICByZXR1cm4gc2hvcnRfbGlzdDsKICAgICAgfQogICAgfSwKICAgIGRpY3RHZXQ6IGZ1bmN0aW9uIGRpY3RHZXQoa2V5KSB7CiAgICAgIHZhciByZXN1bHQgPSB0aGlzLnR5cGVzQWJiW2tleV0gfHwgewogICAgICAgICd0ZXh0JzogJycsCiAgICAgICAgImhvdmVyIjogJycKICAgICAgfTsKICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Results.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <v-expansion-panels flat>\n    <v-expansion-panel>\n      <v-expansion-panel-header><h5>Input parameters</h5></v-expansion-panel-header>\n      <v-expansion-panel-content>\n        <div style=\"width:60%\">\n          <v-data-table\n            :headers=\"inputsHeaders\"\n            :items=\"inputParameters\"\n            :items-per-page=\"10\"\n            class=\"elevation-2\"\n          ></v-data-table>\n        </div>\n      </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  <br>\n    <v-expansion-panels flat v-model=\"panel\">\n      <v-expansion-panel\n      expand\n      v-model=\"panel\">\n      <v-expansion-panel-header><h4>Results</h4></v-expansion-panel-header>\n      <v-expansion-panel-content>\n        <div>\n          <v-data-table\n            :class=\"table\"\n            v-model=\"rowSelect\"\n            :headers=\"headers\"\n            :items=\"tools\"\n            :items-per-page=\"10\"\n            :search=\"search\"\n            :sort-by=\"['score']\"\n            :sort-desc=\"[true]\"\n            multi-sort\n            class=\"elevation-0\" \n          >\n            <template v-slot:top>\n              <v-toolbar flat>\n                <v-text-field\n                    v-model=\"search\"\n                    append-icon=\"mdi-magnify\"\n                    label=\"Search\"\n                    single-line\n                ></v-text-field>\n                <v-spacer></v-spacer>\n                </v-toolbar>\n            </template>\n            <template v-slot:[`body`]=\"{ items }\">\n              <tbody>\n                <tr \n                  @click=\"rowSelect(key)\" \n                  v-for=\"(item, key) in items\" :key=\"item.Tool\"\n                >\n                  <td>\n                    <i  v-if=\"arrowsDownShow(key, item.Tool)\" class=\"fas fa-angle-down cell-arrow\"></i>\n                    <i  v-if=\"arrowsUpShow(key, item.Tool)\" class=\"fas fa-angle-up cell-arrow\"></i>\n                  </td>\n                  <td>\n                    <a :href=\"item.URL\">{{ item.Tool }}</a>\n                  </td>\n                  <td>\n                    <div v-for=\"type in item.Type\" :key=\"type\">\n                      {{ dictGet(type)['text'] }}\n                    <!-- Complete dictionary of types-->\n                    </div>\n                  </td>\n                  <td>\n                    <SourceAvatar :avatarProps='avatars.biotools'/>\n                    <SourceAvatar :avatarProps='avatars.bioconda'/>\n                    <SourceAvatar :avatarProps='avatars.github'/>\n                    <SourceAvatar :avatarProps='avatars.bioconductor'/>\n                    <SourceAvatar :avatarProps='avatars.galaxy'/>\n                    </td>\n                  <td>\n                    {{ trimIfNotSelected(item.Description, key) }}\n                  </td>\n                  <td>\n                    <ul>\n                      <li v-for=\"(topic, Tool) in trimListIfNotSelected(item.Topics, key)\" :key=\"Tool\">\n                        {{ topic }}\n                      </li>\n                      <span v-if=\"item.Topics.length > 3\">...</span>\n                    </ul>\n                  </td>\n                  <td>\n                    <ul>\n                      <li v-for=\"(operation, Tool) in trimListIfNotSelected(item.Operations, key)\" :key=\"Tool\">\n                        {{ operation }}\n                      </li>\n                      <span v-if=\"item.Operations.length > 3\">...</span>\n                    </ul>\n                  </td>\n                  <td id=\"gd\">\n                    {{ item.Citations }}\n                    <!-- Add publication in hover or icon next to number that opens the paper -->\n                  </td>\n                  <td>\n                    {{ item.License }}\n                    <!-- Match license to spdx -->\n                  </td>\n                  <td>\n                    {{ item.keywords_score }}\n                  </td>\n                </tr>\n              </tbody>\n            </template>\n          </v-data-table>\n        </div>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n  </v-expansion-panels>\n</div>\n</template>\n\n<style scoped>\n.v-data-table >>> th {\n  font-size: smaller !important; \n}\n\n.v-data-table.v-data-table.v-data-table >>> tr:hover  {\n  background-color: white !important;\n}\n\n.v-data-table.v-data-table.v-data-table >>> td  {\n  font-size: smaller !important;\n  padding: .5em .5em 1em 1em;\n}\n#descr_panel{\n  font-size: smaller !important;\n}\n\n.cell-arrow{\n  color: darkgray;\n}\n\n.avatar-source{\n  margin-top: 0.4em;\n  margin-right: 0.2em;\n}\n\n.gd{\n  padding: 0%;\n  margin: 0%\n}\n.gd .modebar{\n      display: none !important;\n}\n</style>\n\n<script>\nimport SourceAvatar from './SourceAvatar.vue'\nimport Plotly from 'plotly.js-dist-min'\nvar layout = {title:false,\n              showlegend: false,\n              margin: { l:10, t:10, b:14, r:10}}\nvar trace1 = {\n  x: [2017, 2018, 2019, 2020],\n  y: [2, 14, 23, 35],\n  type: 'scatter'\n};\n\nvar trace2 = {\n  x: [2017, 2018, 2019, 2020],\n  y: [0, 0, 3, 15],\n  type: 'scatter'\n};\n\nvar data = [trace1, trace2];\n\nexport default {\n  name: 'Results',\n  props: ['tools', 'inputParameters'],\n  components: {\n    SourceAvatar\n  },\n  data () {\n    return {\n      activeResults: true,\n      avatars: {\n        biotools: {\n          src:'elixir-logo.svg',\n          color:'orange',\n          content:'bio.tools',\n          url:'bio.tools'\n        },\n        bioconda: {\n          src:'bioconda-logo.svg',\n          color:'#005500',\n          content:'bioconda',\n          url:''\n        },\n        github: {\n          src:'github-logo.svg',\n          color:'black',\n          content:'GitHub',\n          url:'github.org'\n        },\n        bioconductor: {\n          src:'bioconductor-logo.svg',\n          color:'#2f93ba',\n          content:'Bioconductor',\n          url:''\n        },\n        galaxy: {\n          src: 'galaxy-logo.svg',\n          color: '#134798',\n          content: 'Galaxy Eu',\n          url:''\n        }\n      },\n      panel: 0,\n      search: '',\n      selected: null,\n      isHovering: false,\n      longResults:[],\n      headers: [\n        {text: '', align: 'start', sortable: false, value: 'down', width: '1em'},\n        {text: 'Tool', align: 'start', sortable: false, value: 'Tool'},\n        {text: 'Type of Software', value: 'Type'},\n        {text: 'Sources', value: 'sources'},\n        {text: 'Description', value: 'Description', width: '20rem'},\n        {text: 'Related Topics', value: 'Topics', width: '12rem'},\n        {text: 'Functionality', value: 'Operations', width: '12rem'},\n        {text: 'Number of Citations', value: 'Citations',  width: '12rem'},\n        {text: 'License', value: 'License'},\n        {text: 'Score', value: 'keywords_score'}\n      ],\n      inputsHeaders: [\n        {text: 'Keyword', value: 'keyword'},\n        {text: 'Weight', value: 'weight'}\n      ],\n      typesAbb: {\n        'Command-line tool' : {\n          'text': 'CMD',\n          'hover': 'Command-line Tool'\n        },\n        'Web application': {\n          'text': 'Web',\n          'hover': 'Web Application'\n        },\n        'unknown': {\n          'text': 'Unknown',\n          'hover': 'Unknown'\n        }\n      }\n    }\n  },\n  mounted() {\n    this.tools.forEach((item) => {\n      if(item.Description.length>200){\n        this.longResults.push(item.Tool)\n        return\n      }\n      if(item.Topics.length>3){\n        this.longResults.push(item.Tool)\n        return\n      }\n    }),\n    Plotly.newPlot(\"gd\", /* JSON object */ {\n      \"data\": data,\n      \"config\": { \"displayModeBar\": false  },\n      \"layout\": layout\n    })\n  },\n  methods:{\n    rowSelect(idx) {\n      console.log('selected', idx)\n      if(this.selected === idx){\n        this.selected = null;\n      } else {\n        this.selected = idx;\n      }\n    },\n    arrowsDownShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx != this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n    },\n    arrowsUpShow(idx, toolID){\n      if(this.longResults.includes(toolID) && idx === this.selected){\n        return(true)\n      }else{\n        return(false)\n      }\n    },\n    trimIfNotSelected(value, idx){\n      if(this.selected === idx){\n        return(value)\n      }else{\n        if(value.length > 255){\n          var short = `${value.substring(0,200)}...`\n        }else{\n          return(value)\n        }\n        return(short)\n      }\n    },\n    trimListIfNotSelected(list, idx){\n      if(this.selected === idx){\n        return(list)\n      }else{\n        var short_list = list.slice(0,3)\n        return(short_list)\n      }\n    },\n    dictGet(key) {\n      var result = this.typesAbb[key] || {'text':'', \"hover\":''}\n      return(result)\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components"}]}