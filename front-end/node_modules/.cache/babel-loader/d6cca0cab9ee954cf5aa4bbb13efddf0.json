{"remainingRequest":"/home/eva/tooldiscoverer/node_modules/babel-loader/lib/index.js!/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/eva/tooldiscoverer/src/views/Run.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/eva/tooldiscoverer/src/views/Run.vue","mtime":1640460483489},{"path":"/home/eva/tooldiscoverer/babel.config.js","mtime":1640023482378},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/babel-loader/lib/index.js","mtime":1640024185676},{"path":"/home/eva/tooldiscoverer/node_modules/cache-loader/dist/cjs.js","mtime":1640024184632},{"path":"/home/eva/tooldiscoverer/node_modules/vue-loader/lib/index.js","mtime":1640024185900}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2V2YS90b29sZGlzY292ZXJlci9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRlc3QuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBSZXN1bHRzIGZyb20gJy4uL2NvbXBvbmVudHMvUmVzdWx0cy52dWUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1J1bicsCiAgY29tcG9uZW50czogewogICAgUmVzdWx0czogUmVzdWx0cwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlucHV0VGV4dGFyZWE6ICcnLAogICAgICBmb3JtYXRFcnJvclZpc2libGU6IGZhbHNlLAogICAgICBsaW5lTnVtOiAwLAogICAgICByZXN1bHRzOiBbXSwKICAgICAgcXVlcnlpbmc6IGZhbHNlLAogICAgICByZXN1bHRzVmlzaWJsZTogZmFsc2UsCiAgICAgIHZhbHVlOiAwLAogICAgICBxdWVyeTogZmFsc2UsCiAgICAgIHNob3c6IHRydWUsCiAgICAgIGludGVydmFsOiAwLAoKICAgICAgLyoqCiAgICAgICogdG9vbHMgc2hvdWxkIGNvbWUgZnJvbSBhbiBheGlvcy5nZXQoKSwgaXQgaXMgaGFyZCBjb2RlZCBmb3IgZGVtb25zdHJhdGlvbiBwdXJwb3NlcwogICAgICAqLwogICAgICBpbnB1dFBhcmFtZXRlcnM6IFt7CiAgICAgICAga2V5d29yZDogJ29udG9sb2d5IG1hcHBpbmcnLAogICAgICAgIHdlaWdodDogJzAuOCcKICAgICAgfSwgewogICAgICAgIGtleXdvcmQ6ICdvbnRvbG9neSBjcm9zc3dhbGsnLAogICAgICAgIHdlaWdodDogJzAuOScKICAgICAgfV0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzYW1wbGVJbnB1dDogZnVuY3Rpb24gc2FtcGxlSW5wdXQoKSB7CiAgICAgIHRoaXMuaW5wdXRUZXh0YXJlYSA9ICdPbnRvbG9neSBhbm5vdGF0aW9uLCAxXG5zZW1hbnRpYyBhbm5vdGF0aW9uLCAwLjhcblRleHQgbWluaW5nLCAwLjVcblRleHQgYW5ub3RhdGlvbiwgMC41XG5FbnRpdHkgdGFnZ2luZywgMC41XG5FbnRpdHkgcmVjb2duaXRpb24sIDAuNzVcbk5hbWVkLWVudGl0eSBhbmQgY29uY2VwdCByZWNvZ25pdGlvbiwgMC43NVxub250b2xvZ3kgYW5kIHRlcm1pbm9sb2d5LCAxXG5RdWVyeSBleHBhbnNpb24sIDAuNzVcbkZyZWUgdGV4dCBtYXBwaW5nLCAxXG5UZXh0IEFubm90YXRpb24sIDFcbkFubm90YXRpb24sIDAuNSc7CiAgICAgIHRoaXMucmVzdWx0c1Zpc2libGUgPSBmYWxzZTsKICAgIH0sCiAgICBjbGVhcklucHV0OiBmdW5jdGlvbiBjbGVhcklucHV0KCkgewogICAgICB0aGlzLmlucHV0VGV4dGFyZWEgPSAnJzsKICAgIH0sCiAgICBydW5EaXNjb3ZlcmVyOiBmdW5jdGlvbiBydW5EaXNjb3ZlcmVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZkNvcnJlY3Q7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMucmVzdWx0cyA9IFtdOwogICAgICAgICAgICAgICAgZkNvcnJlY3QgPSBfdGhpcy5mb3JtYXRDb3JyZWN0KCk7CgogICAgICAgICAgICAgICAgaWYgKGZDb3JyZWN0ID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdDb3JyZWN0IGZvcm1hdCwgUlVOIScpOwogICAgICAgICAgICAgICAgICBfdGhpcy5mb3JtYXRFcnJvclZpc2libGUgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgX3RoaXMucXVlcnlpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgICBfdGhpcy5xdWVyeSA9IHRydWU7CgogICAgICAgICAgICAgICAgICBfdGhpcy5Ub29sRGlzY292ZXJlckNhbGwoKTsKCiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkb25lJyk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBfdGhpcy5saW5lTnVtID0gZkNvcnJlY3Q7CiAgICAgICAgICAgICAgICAgIF90aGlzLmZvcm1hdEVycm9yVmlzaWJsZSA9IHRydWU7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmb3JtYXRDb3JyZWN0OiBmdW5jdGlvbiBmb3JtYXRDb3JyZWN0KCkgewogICAgICB2YXIgbGluZXMgPSB0aGlzLmlucHV0VGV4dGFyZWEuc3BsaXQoL1xyP1xuL2cpOwogICAgICB2YXIgY3N2TGluZVJlZ2V4ID0gL14oW15cclxuO10qKSwoWyIgKiJdP1xkKyhcLlxkKyk/KSQvOwoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaW5lcy5sZW5ndGg7IGkrKykgewogICAgICAgIHZhciBsaW5lVmFsaWQgPSBjc3ZMaW5lUmVnZXgudGVzdChsaW5lc1tpXSk7CgogICAgICAgIGlmIChsaW5lVmFsaWQgPT09IHRydWUpIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZXR1cm4gaSArIDE7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCiAgICBUb29sRGlzY292ZXJlckNhbGw6IGZ1bmN0aW9uIFRvb2xEaXNjb3ZlcmVyQ2FsbCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBheGlvcyh7CiAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgdXJsOiAnaHR0cDovLzEyNy4wLjAuMTo1MDAwLycsCiAgICAgICAgZGF0YTogewogICAgICAgICAgdGV4dGFyZWFfY29udGVudDogdGhpcy5pbnB1dFRleHRhcmVhCiAgICAgICAgfSwKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbic6ICcqJwogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBfdGhpczIucmVzdWx0cyA9IHJlc3BvbnNlLmRhdGEubWVzc2FnZTsKICAgICAgICBfdGhpczIucXVlcnlpbmcgPSBmYWxzZTsKICAgICAgICBfdGhpczIucmVzdWx0c1Zpc2libGUgPSB0cnVlOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["Run.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container run_main\">\n    <div class=\"row\">\n        <h4>Input</h4>\n        <p>Enter keywords and their respective weights (optionally) to discover tools.</p>\n        <div class=\"col-sm-8 d-flex\">\n            <form action=\"\" method=\"post\" id=\"input_text\">\n                <textarea v-model=inputTextarea name=\"input_data\" class=\"form-control\" id=\"input_textarea\" aria-label=\"\"></textarea>\n                <!--div name=\"input_data\" contenteditable=\"true\" id=\"input_textarea\"></div-->\n                <small id=\"\" class=\"form-text text-muted\">For further axplanation on input format, see <a href=\"/help\">here</a>.<br></small>\n                <button type=\"button\" name=\"run\" value=\"Run\" v-on:click=runDiscoverer class=\"input-run-btn\" id=\"run_button\">Run</button>\n                <span v-if=formatErrorVisible id=\"errorFormat\"><i class=\"fas fa-times\"></i> Error: invalid format detected in line <span v-html=\"lineNum\"></span></span>\n            </form>\n        </div>\n        <div class=\"col-sm-2 d-flex\">\n            <div class=\"btn-group-vertical\">\n                <button type=\"button\" class=\"input-aid-btn\" id=\"input_example_button\" v-on:click=sampleInput>Show an example</button>\n                <button type=\"button\" class=\"input-aid-btn\" id=\"input_clear_button\" v-on:click=clearInput>Clear</button>\n            </div>\n        </div>\n    </div>\n      <div>\n        <div v-if=querying style=\"min-height: 4px;\">\n          <!-- query progress bar, see eaxample https://github.com/vuetifyjs/vuetify/blob/master/packages/docs/src/examples/v-progress-linear/prop-query.vue -->\n          <v-progress-linear\n            v-model=\"value\"\n            :active=\"show\"\n            :indeterminate=\"query\"\n            :query=\"true\"\n          ></v-progress-linear>\n        </div>\n        <Results v-if=\"resultsVisible\" :tools=\"results\" :inputParameters=\"inputParameters\" />\n      </div>\n</div>\n</template>\n<script>\nimport Results from '../components/Results.vue'\nimport axios from 'axios'\nexport default {\n  name: 'Run',\n  components: {\n    Results\n  },\n  data () {\n    return {\n      inputTextarea: '',\n      formatErrorVisible: false,\n      lineNum: 0,\n      results: [],\n      querying: false,\n      resultsVisible: false,\n      value: 0,\n      query: false,\n      show: true,\n      interval: 0,\n      /**\n     * tools should come from an axios.get(), it is hard coded for demonstration purposes\n     */\n      inputParameters: [\n        {\n          keyword: 'ontology mapping',\n          weight: '0.8'\n        },\n        {\n          keyword: 'ontology crosswalk',\n          weight: '0.9'\n        }\n      ]\n    }\n  },\n  methods: {\n    sampleInput () {\n      this.inputTextarea = 'Ontology annotation, 1\\nsemantic annotation, 0.8\\nText mining, 0.5\\nText annotation, 0.5\\nEntity tagging, 0.5\\nEntity recognition, 0.75\\nNamed-entity and concept recognition, 0.75\\nontology and terminology, 1\\nQuery expansion, 0.75\\nFree text mapping, 1\\nText Annotation, 1\\nAnnotation, 0.5'\n      this.resultsVisible = false\n    },\n    clearInput () {\n      this.inputTextarea = ''\n    },\n    async runDiscoverer () {\n      this.results = []\n      var fCorrect = this.formatCorrect()\n      if (fCorrect === true) {\n        console.log('Correct format, RUN!')\n        this.formatErrorVisible = false\n        this.querying = true\n        this.query = true\n        this.ToolDiscovererCall()\n        console.log('done')\n      } else {\n        this.lineNum = fCorrect\n        this.formatErrorVisible = true\n      }\n    },\n    formatCorrect () {\n      var lines = this.inputTextarea.split(/\\r?\\n/g)\n      var csvLineRegex = /^([^\\r\\n;]*),([\" *\"]?\\d+(\\.\\d+)?)$/\n      for (var i = 0; i < lines.length; i++) {\n        var lineValid = csvLineRegex.test(lines[i])\n        if (lineValid === true) {\n          continue\n        } else {\n          return i + 1\n        }\n      }\n      return true\n    },\n    ToolDiscovererCall () {\n      axios({\n        method: 'post',\n        url: 'http://127.0.0.1:5000/',\n        data: {\n          textarea_content: this.inputTextarea\n        },\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      })\n        .then(\n          (response) => {\n            this.results = response.data.message\n            this.querying = false\n            this.resultsVisible = true\n          })\n        .then(\n          (error) => {\n            console.log(error)\n          })\n    }\n  }\n}\n</script>\n<style>\n#errorFormat{\n  color: darkred;\n  font-size: small;\n}\n.input-run-btn{\n    width: 3em;\n    border: 1px solid green;\n    background-color: green;\n    color: white;\n    font-weight: bold;\n    margin: 1em;\n    margin-left: 0;\n}\n.input-aid-btn{\n    border: 1px solid grey; \n    color: grey;\n    background-color: white;\n    padding: 2%;\n    margin: 2px;\n    width: 100%;\n    margin-top: 1em;\n}\n.input_label{\n    font-size: smaller;\n    font-weight: bold;\n}\n.run_main{\n  text-align: left;\n  align-items: left;\n  margin-bottom: 2em;\n  font-size: smaller;\n  width: 100%;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}